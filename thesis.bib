
@article{torr_demystifying_2005,
	title = {Demystifying the Threat-Modeling Process},
	volume = {3},
	issn = {1540-7993},
	url = {http://ieeexplore.ieee.org/document/1514406/},
	doi = {10.1109/MSP.2005.119},
	pages = {66--70},
	number = {5},
	journaltitle = {{IEEE} Secur. Privacy Mag.},
	author = {Torr, P.},
	urldate = {2023-10-04},
	date = {2005-09},
	langid = {english},
	note = {73 citations (Crossref) [2023-11-07]},
	file = {Torr - 2005 - Demystifying the Threat-Modeling Process.pdf:C\:\\Users\\jakn\\Zotero\\storage\\WBS95CTB\\Torr - 2005 - Demystifying the Threat-Modeling Process.pdf:application/pdf},
}

@article{noauthor_intel_nodate,
	title = {Intel® Trust Domain {CPU} Architectural Extensions},
	langid = {english},
	file = {Intel® Trust Domain CPU Architectural Extensions.pdf:C\:\\Users\\jakn\\Zotero\\storage\\EL8X2BIP\\Intel® Trust Domain CPU Architectural Extensions.pdf:application/pdf},
}

@article{sardar_demystifying_2021,
	title = {Demystifying Attestation in Intel Trust Domain Extensions via Formal Verification},
	volume = {9},
	issn = {2169-3536},
	url = {https://ieeexplore.ieee.org/document/9448036/},
	doi = {10.1109/ACCESS.2021.3087421},
	abstract = {In August 2020, Intel asked the research community for feedback on the newly offered architecture extensions, called Intel Trust Domain Extensions ({TDX}), which give more control to Trust Domains ({TDs}) over processor resources. One of the key features of these extensions is the remote attestation mechanism, which provides a uniﬁed report veriﬁcation mechanism for {TDX} and its predecessor Software Guard Extensions ({SGX}). Based on our experience and intuition, we respond to the request for feedback by formally specifying the attestation mechanism in the {TDX} using {ProVerif}’s speciﬁcation language. Although the {TDX} technology seems very promising, the process of formal speciﬁcation reveals a number of subtle discrepancies in Intel’s speciﬁcations that could potentially lead to design and implementation ﬂaws. After resolving these discrepancies, we also present fully automated proofs that our speciﬁcation of {TD} attestation preserves the conﬁdentiality of the secret and authentication of the report by considering the state-of-the-art Dolev-Yao adversary in the symbolic model using {ProVerif}. We have submitted the draft to Intel, and Intel is in the process of making the changes.},
	pages = {83067--83079},
	journaltitle = {{IEEE} Access},
	author = {Sardar, Muhammad Usama and Musaev, Saidgani and Fetzer, Christof},
	urldate = {2023-10-04},
	date = {2021},
	langid = {english},
	note = {11 citations (Crossref) [2023-11-07]},
	file = {Sardar et al. - 2021 - Demystifying Attestation in Intel Trust Domain Ext.pdf:C\:\\Users\\jakn\\Zotero\\storage\\8VH4XJFT\\Sardar et al. - 2021 - Demystifying Attestation in Intel Trust Domain Ext.pdf:application/pdf},
}

@inproceedings {Luo_container_ima,
author = {Wu Luo and Qingni Shen and Yutang Xia and Zhonghai Wu},
title = {{Container-IMA}: A privacy-preserving Integrity Measurement Architecture for Containers},
booktitle = {22nd International Symposium on Research in Attacks, Intrusions and Defenses (RAID 2019)},
year = {2019},
isbn = {978-1-939133-07-6},
address = {Chaoyang District, Beijing},
pages = {487--500},
url = {https://www.usenix.org/conference/raid2019/presentation/luo},
publisher = {USENIX Association},
month = sep
}

@misc{aktas_intel_nodate,
	title = {Intel Trust Domain Extensions ({TDX}) Security Review},
	author = {Aktas, Erdem and Cohen, Cfir and Eads, Josh and Forshaw, James and Wilhelm, Felix},
	langid = {english},
	keywords = {⛔ No {DOI} found},
        URL={https://services.google.com/fh/files/misc/intel_tdx_-_full_report_041423.pdf},
	file = {Aktas et al. - Intel Trust Domain Extensions (TDX) Security Revie.pdf:C\:\\Users\\jakn\\Zotero\\storage\\38BHRRWF\\Aktas et al. - Intel Trust Domain Extensions (TDX) Security Revie.pdf:application/pdf},
}

@misc{cheng_intel_2023,
	title = {Intel {TDX} Demystified: A Top-Down Approach},
	url = {http://arxiv.org/abs/2303.15540},
	shorttitle = {Intel {TDX} Demystified},
	abstract = {Intel Trust Domain Extensions ({TDX}) is a new architectural extension in the 4th Generation Intel Xeon Scalable Processor that supports confidential computing. {TDX} allows the deployment of virtual machines in the Secure-Arbitration Mode ({SEAM}) with encrypted {CPU} state and memory, integrity protection, and remote attestation. {TDX} aims to enforce hardware-assisted isolation for virtual machines and minimize the attack surface exposed to host platforms, which are considered to be untrustworthy or adversarial in the confidential computing's new threat model. {TDX} can be leveraged by regulated industries or sensitive data holders to outsource their computations and data with end-to-end protection in public cloud infrastructure. This paper aims to provide a comprehensive understanding of {TDX} to potential adopters, domain experts, and security researchers looking to leverage the technology for their own purposes. We adopt a top-down approach, starting with high-level security principles and moving to low-level technical details of {TDX}. Our analysis is based on publicly available documentation and source code, offering insights from security researchers outside of Intel.},
	number = {{arXiv}:2303.15540},
	publisher = {{arXiv}},
	author = {Cheng, Pau-Chen and Ozga, Wojciech and Valdez, Enriquillo and Ahmed, Salman and Gu, Zhongshu and Jamjoom, Hani and Franke, Hubertus and Bottomley, James},
	urldate = {2023-10-17},
	date = {2023-03-27},
	eprinttype = {arxiv},
	eprint = {2303.15540 [cs]},
	keywords = {Computer Science - Cryptography and Security, Computer Science - Operating Systems},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\NASK7BHX\\2303.html:text/html;Full Text PDF:C\:\\Users\\jakn\\Zotero\\storage\\F7MQWTFS\\Cheng et al. - 2023 - Intel TDX Demystified A Top-Down Approach.pdf:application/pdf},
}

@online{confidential_computing_consortium_ccc--technical-analysis--confidential-computing-v13_unlockedpdf_nodate,
	title = {{CCC}-A-Technical-Analysis-of-Confidential-Computing-v1.3\_unlocked.pdf},
	url = {https://confidentialcomputing.io/wp-content/uploads/sites/10/2023/03/CCC-A-Technical-Analysis-of-Confidential-Computing-v1.3_unlocked.pdf},
	author = {{Confidential Computing Consortium}},
	urldate = {2023-10-20},
	file = {CCC-A-Technical-Analysis-of-Confidential-Computing-v1.3_unlocked.pdf:C\:\\Users\\jakn\\Zotero\\storage\\5DDG4D23\\CCC-A-Technical-Analysis-of-Confidential-Computing-v1.3_unlocked.pdf:application/pdf},
}

@misc{noauthor_tdx-whitepaper-february2022pdf_nodate,
	title = {Intel® Trust Domain Extensions Whitepaper},
	url = {https://cdrdv2-public.intel.com/690419/TDX-Whitepaper-February2022.pdf},
	author = {{Intel Corporation}},
	date = {2024-02-13},
	langid = {english},
	file = {Intel® Trust Domain Extensions.pdf:C\:\\Users\\jakn\\Zotero\\storage\\FWSUQ5PB\\Intel® Trust Domain Extensions.pdf:application/pdf},
}

@article{xiong_threat_2019,
	title = {Threat modeling – A systematic literature review},
	volume = {84},
	issn = {01674048},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167404818307478},
	doi = {10.1016/j.cose.2019.03.010},
	pages = {53--69},
	journaltitle = {Computers \& Security},
	author = {Xiong, Wenjun and Lagerström, Robert},
	urldate = {2023-10-24},
	date = {2019-07},
	langid = {english},
	note = {98 citations (Crossref) [2023-11-07]
{QID}: Q67196521},
	file = {Xiong and Lagerström - 2019 - Threat modeling – A systematic literature review.pdf:C\:\\Users\\jakn\\Zotero\\storage\\SGULCZLK\\Xiong and Lagerström - 2019 - Threat modeling – A systematic literature review.pdf:application/pdf},
}

@inproceedings{machiry_boomerang_2017,
	location = {San Diego, {CA}},
	title = {{BOOMERANG}: Exploiting the Semantic Gap in Trusted Execution Environments},
	isbn = {978-1-891562-46-4},
	url = {https://www.ndss-symposium.org/ndss2017/ndss-2017-programme/boomerang-exploiting-semantic-gap-trusted-execution-environments/},
	doi = {10.14722/ndss.2017.23227},
	shorttitle = {{BOOMERANG}},
	abstract = {In the past decade, we have come to rely on computers for various safety and security-critical tasks, such as securing our homes, operating our vehicles, and controlling our ﬁnances. To facilitate these tasks, chip manufacturers have begun including trusted execution environments ({TEEs}) in their processors, which enable critical code (e.g., cryptographic functions) to run in an isolated hardware environment that is protected from the traditional operating system ({OS}) and its applications. While code in the untrusted environment (e.g., Android or Linux) is forbidden from accessing any memory or state within the {TEE}, the code running in the {TEE}, by design, has unrestricted access to the memory of the untrusted {OS} and its applications. However, due to the isolation between these two environments, the {TEE} has very limited visibility into the untrusted environment’s security mechanisms (e.g., kernel vs. application memory).},
	eventtitle = {Network and Distributed System Security Symposium},
	booktitle = {Proceedings 2017 Network and Distributed System Security Symposium},
	publisher = {Internet Society},
	author = {Machiry, Aravind and Gustafson, Eric and Spensky, Chad and Salls, Christopher and Stephens, Nick and Wang, Ruoyu and Bianchi, Antonio and Choe, Yung Ryn and Kruegel, Christopher and Vigna, Giovanni},
	urldate = {2023-10-25},
	date = {2017},
	langid = {english},
	note = {44 citations (Crossref) [2023-11-07]},
	file = {Machiry et al. - 2017 - BOOMERANG Exploiting the Semantic Gap in Trusted .pdf:C\:\\Users\\jakn\\Zotero\\storage\\I76ITT2C\\Machiry et al. - 2017 - BOOMERANG Exploiting the Semantic Gap in Trusted .pdf:application/pdf},
}

@misc{chen_voltpillager_nodate,
	title = {{VoltPillager}: Hardware-based fault injection attacks against Intel {SGX} Enclaves using the {SVID} voltage scaling interface},
	abstract = {Hardware-based fault injection attacks such as voltage and clock glitching have been thoroughly studied on embedded devices. Typical targets for such attacks include smartcards and low-power microcontrollers used in {IoT} devices. This paper presents the ﬁrst hardware-based voltage glitching attack against a fully-ﬂedged Intel {CPU}. The transition to complex {CPUs} is not trivial due to several factors, including: a complex operating system, large power consumption, multi-threading, and high clock speeds. To this end, we have built {VoltPillager}, a low-cost tool for injecting messages on the Serial Voltage Identiﬁcation bus between the {CPU} and the voltage regulator on the motherboard. This allows us to precisely control the {CPU} core voltage. We leverage this powerful tool to mount fault-injection attacks that breach conﬁdentiality and integrity of Intel {SGX} enclaves. We present proof-of-concept key-recovery attacks against cryptographic algorithms running inside {SGX}. We demonstrate that {VoltPillager} attacks are more powerful than recent software-only undervolting attacks against {SGX} ({CVE}-2019-11157) because they work on fully patched systems with all countermeasures against software undervolting enabled. Additionally, we are able to fault securitycritical operations by delaying memory writes. Mitigation of {VoltPillager} is not straightforward and may require a rethink of the {SGX} adversarial model where a cloud provider is untrusted and has physical access to the hardware.},
	author = {Chen, Zitai and Vasilakis, Georgios and Murdock, Kit and Dean, Edward and Oswald, David and Garcia, Flavio D},
	langid = {english},
	keywords = {⛔ No {DOI} found},
	file = {Chen et al. - VoltPillager Hardware-based fault injection attac.pdf:C\:\\Users\\jakn\\Zotero\\storage\\K5MUCJVM\\Chen et al. - VoltPillager Hardware-based fault injection attac.pdf:application/pdf},
}

@article{singh_enclaves_2021,
	title = {Enclaves in the clouds: Legal considerations and broader implications},
	volume = {64},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/3447543},
	doi = {10.1145/3447543},
	shorttitle = {Enclaves in the clouds},
	abstract = {Trusted Execution Environments ('{TEEs}') or 'secure enclaves' aim at enabling more secure computation and data management. There is much enthusiasm for this technology, not least as we see increasing legal and regulatory attention on issues of security, privacy, and data management and use. With cloud providing the infrastructure for underpinning applications, data processing and analytics/{ML}, access to enclaves and enclave-backed technologies are increasingly being offered by service (cloud) providers - with the technology described as enabling
              confidential computing
              . This paper provides a high-level overview of the common security properties provided by enclaves, and considers how such technology, in being offered by cloud providers, relates to organizational legal and regulatory concerns. Focusing on data protection regulations, we explore the aspects of {TEEs} that might assist compliance, and who stands to benefit from the deployment of such technology in a service provision context.},
	pages = {42--51},
	number = {5},
	journaltitle = {Commun. {ACM}},
	author = {Singh, Jatinder and Cobbe, Jennifer and Quoc, Do Le and Tarkhani, Zahra},
	urldate = {2023-10-25},
	date = {2021-05},
	langid = {english},
	note = {2 citations (Crossref) [2023-11-07]},
	file = {Full Text PDF:C\:\\Users\\jakn\\Zotero\\storage\\EIC7PG3B\\Singh et al. - 2021 - Enclaves in the clouds Legal considerations and b.pdf:application/pdf},
}

@misc{mo_machine_2023,
	title = {Machine Learning with Confidential Computing: A Systematization of Knowledge},
	url = {http://arxiv.org/abs/2208.10134},
	shorttitle = {Machine Learning with Confidential Computing},
	abstract = {Privacy and security challenges in Machine Learning ({ML}) have become increasingly severe, along with {ML}'s pervasive development and the recent demonstration of large attack surfaces. As a mature system-oriented approach, Confidential Computing has been utilized in both academia and industry to mitigate privacy and security issues in various {ML} scenarios. In this paper, the conjunction between {ML} and Confidential Computing is investigated. We systematize the prior work on Confidential Computing-assisted {ML} techniques that provide i) confidentiality guarantees and ii) integrity assurances, and discuss their advanced features and drawbacks. Key challenges are further identified, and we provide dedicated analyses of the limitations in existing Trusted Execution Environment ({TEE}) systems for {ML} use cases. Finally, prospective works are discussed, including grounded privacy definitions for closed-loop protection, partitioned executions of efficient {ML}, dedicated {TEE}-assisted designs for {ML}, {TEE}-aware {ML}, and {ML} full pipeline guarantees. By providing these potential solutions in our systematization of knowledge, we aim at building the bridge to help achieve a much strong {TEE}-enabled {ML} for privacy guarantees without introducing computation and system costs.},
	number = {{arXiv}:2208.10134},
	publisher = {{arXiv}},
	author = {Mo, Fan and Tarkhani, Zahra and Haddadi, Hamed},
	urldate = {2023-10-25},
	date = {2023-04-02},
	eprinttype = {arxiv},
	eprint = {2208.10134 [cs]},
	keywords = {Computer Science - Cryptography and Security, Computer Science - Machine Learning},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\PMMKPYXG\\2208.html:text/html;Full Text PDF:C\:\\Users\\jakn\\Zotero\\storage\\K6U27SHP\\Mo et al. - 2023 - Machine Learning with Confidential Computing A Sy.pdf:application/pdf},
}

@inproceedings{khandaker_coin_2020,
	location = {Lausanne Switzerland},
	title = {{COIN} Attacks: On Insecurity of Enclave Untrusted Interfaces in {SGX}},
	isbn = {978-1-4503-7102-5},
	url = {https://dl.acm.org/doi/10.1145/3373376.3378486},
	doi = {10.1145/3373376.3378486},
	shorttitle = {{COIN} Attacks},
	abstract = {Intel {SGX} is a hardware-based trusted execution environment ({TEE}), which enables an application to compute on confidential data in a secure enclave. {SGX} assumes a powerful threat model, in which only the {CPU} itself is trusted; anything else is untrusted, including the memory, firmware, system software, etc. An enclave interacts with its host application through an exposed, enclave-specific, (usually) bidirectional interface. This interface is the main attack surface of the enclave. The attacker can invoke the interface in any order and inputs. It is thus imperative to secure it through careful design and defensive programming.},
	eventtitle = {{ASPLOS} '20: Architectural Support for Programming Languages and Operating Systems},
	pages = {971--985},
	booktitle = {Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems},
	publisher = {{ACM}},
	author = {Khandaker, Mustakimur Rahman and Cheng, Yueqiang and Wang, Zhi and Wei, Tao},
	urldate = {2023-10-25},
	date = {2020-03-09},
	langid = {english},
	note = {16 citations (Crossref) [2023-11-07]},
	file = {Khandaker et al. - 2020 - COIN Attacks On Insecurity of Enclave Untrusted I.pdf:C\:\\Users\\jakn\\Zotero\\storage\\ZD7V9PDK\\Khandaker et al. - 2020 - COIN Attacks On Insecurity of Enclave Untrusted I.pdf:application/pdf},
}

@article{uhlig_intel_2005,
	title = {Intel virtualization technology},
	volume = {38},
	issn = {0018-9162},
	url = {http://ieeexplore.ieee.org/document/1430631/},
	doi = {10.1109/MC.2005.163},
	pages = {48--56},
	number = {5},
	journaltitle = {Computer},
	author = {Uhlig, R. and Neiger, G. and Rodgers, D. and Santoni, A.L. and Martins, F.C.M. and Anderson, A.V. and Bennett, S.M. and Kagi, A. and Leung, F.H. and Smith, L.},
	urldate = {2023-10-26},
	date = {2005-05},
	langid = {english},
	note = {408 citations (Crossref) [2023-11-07]
{QID}: Q56067761},
	file = {Uhlig et al. - 2005 - Intel virtualization technology.pdf:C\:\\Users\\jakn\\Zotero\\storage\\BPPBRYBA\\Uhlig et al. - 2005 - Intel virtualization technology.pdf:application/pdf},
}

@misc{noauthor_tdx-module-10-public-specpdf_nodate,
	title = {TDX Module v1.0 public specifications},
        author = {Intel Coproration},
        URL = {https://cdrdv2-public.intel.com/733568/tdx-module-1.0-public-spec-344425005.pdf},
	file = {tdx-module-1.0-public-spec-344425005.pdf:C\:\\Users\\jakn\\Zotero\\storage\\S5D4SEH3\\tdx-module-1.0-public-spec-344425005.pdf:application/pdf},
}

@online{noauthor_ccc_outreach_whitepaper_updated_november_2022pdf_2023,
	title = {{CCC}\_outreach\_whitepaper\_updated\_November\_2022.pdf},
	url = {https://confidentialcomputing.io/wp-content/uploads/sites/10/2023/03/CCC_outreach_whitepaper_updated_November_2022.pdf},
	urldate = {2023-10-20},
	date = {2023-03-15},
	file = {CCC_outreach_whitepaper_updated_November_2022.pdf:C\:\\Users\\jakn\\Zotero\\storage\\8S5CB6EC\\CCC_outreach_whitepaper_updated_November_2022.pdf:application/pdf},
}

@inproceedings{chen_verified_2023,
	title = {A Verified Confidential Computing as a Service Framework for Privacy Preservation},
	isbn = {978-1-939133-37-3},
	url = {https://www.usenix.org/conference/usenixsecurity23/presentation/chen-hongbo},
	eventtitle = {32nd {USENIX} Security Symposium ({USENIX} Security 23)},
	pages = {4733--4750},
	author = {Chen, Hongbo and Chen, Haobin Hiroki and Sun, Mingshen and Li, Kang and Chen, Zhaofeng and Wang, {XiaoFeng}},
	urldate = {2023-11-07},
	date = {2023},
	langid = {english},
	file = {Chen et al_2023_A Verified Confidential Computing as a Service Framework for Privacy.pdf:C\:\\Users\\jakn\\Zotero\\storage\\EY6BSR7E\\Chen et al_2023_A Verified Confidential Computing as a Service Framework for Privacy.pdf:application/pdf},
}

@article{delignat-lavaud_why_2023,
	title = {Why Should I Trust Your Code? Confidential computing enables users to authenticate code running in {TEEs}, but users also need evidence this code is trustworthy.},
	volume = {21},
	issn = {1542-7730},
	url = {https://dl.acm.org/doi/10.1145/3623460},
	doi = {10.1145/3623460},
	shorttitle = {Why Should I Trust Your Code?},
	abstract = {For Confidential Computing to become ubiquitous in the cloud, in the same way that {HTTPS} became the default for networking, a different, more flexible approach is needed. Although there is no guarantee that every malicious code behavior will be caught upfront, precise auditability can be guaranteed: Anyone who suspects that trust has been broken by a confidential service should be able to audit any part of its attested code base, including all updates, dependencies, policies, and tools. To achieve this, we propose an architecture to track code provenance and to hold code providers accountable. At its core, a new Code Transparency Service ({CTS}) maintains a public, append-only ledger that records all code deployed for confidential services. Before registering new code, {CTS} automatically applies policies to enforce code-integrity properties. For example, it can enforce the use of authorized releases of library dependencies and verify that code has been compiled with specific runtime checks and analyzed by specific tools. These upfront checks prevent common supply-chain attacks.},
	pages = {Pages 30:94--Pages 30:122},
	number = {4},
	journaltitle = {Queue},
	author = {Delignat-Lavaud, Antoine and Fournet, Cédric and Vaswani, Kapil and Clebsch, Sylvan and Riechert, Maik and Costa, Manuel and Russinovich, Mark},
	urldate = {2023-11-07},
	date = {2023-09-07},
	note = {0 citations (Crossref) [2023-11-07]},
	file = {Delignat-Lavaud et al_2023_Why Should I Trust Your Code.pdf:C\:\\Users\\jakn\\Zotero\\storage\\8UZJZR7R\\Delignat-Lavaud et al_2023_Why Should I Trust Your Code.pdf:application/pdf},
}

@inproceedings{graepel_ml_2013,
	location = {Berlin, Heidelberg},
	title = {{ML} Confidential: Machine Learning on Encrypted Data},
	isbn = {978-3-642-37682-5},
	doi = {10.1007/978-3-642-37682-5_1},
	series = {Lecture Notes in Computer Science},
	shorttitle = {{ML} Confidential},
	abstract = {We demonstrate that, by using a recently proposed leveled homomorphic encryption scheme, it is possible to delegate the execution of a machine learning algorithm to a computing service while retaining confidentiality of the training and test data. Since the computational complexity of the homomorphic encryption scheme depends primarily on the number of levels of multiplications to be carried out on the encrypted data, we define a new class of machine learning algorithms in which the algorithm’s predictions, viewed as functions of the input data, can be expressed as polynomials of bounded degree. We propose confidential algorithms for binary classification based on polynomial approximations to least-squares solutions obtained by a small number of gradient descent steps. We present experimental validation of the confidential machine learning pipeline and discuss the trade-offs regarding computational complexity, prediction accuracy and cryptographic security.},
	pages = {1--21},
	booktitle = {Information Security and Cryptology – {ICISC} 2012},
	publisher = {Springer},
	author = {Graepel, Thore and Lauter, Kristin and Naehrig, Michael},
	editor = {Kwon, Taekyoung and Lee, Mun-Kyu and Kwon, Daesung},
	date = {2013},
	langid = {english},
	note = {141 citations (Crossref) [2023-11-07]},
	keywords = {Cloud Service Provider, Content Provider, Machine Learning Algorithm, Test Vector, Training Stage},
	file = {Graepel et al_2013_ML Confidential.pdf:C\:\\Users\\jakn\\Zotero\\storage\\KPVWRXUR\\Graepel et al_2013_ML Confidential.pdf:application/pdf},
}

@inproceedings{park_fairness_2022,
	location = {New York, {NY}, {USA}},
	title = {Fairness Audit of Machine Learning Models with Confidential Computing},
	isbn = {978-1-4503-9096-5},
	url = {https://dl.acm.org/doi/10.1145/3485447.3512244},
	doi = {10.1145/3485447.3512244},
	series = {{WWW} '22},
	abstract = {Algorithmic discrimination is one of the significant concerns in applying machine learning models to a real-world system. Many researchers have focused on developing fair machine learning algorithms without discrimination based on legally protected attributes. However, the existing research has barely explored various security issues that can occur while evaluating model fairness and verifying fair models. In this study, we propose a fairness audit framework that assesses the fairness of {ML} algorithms while addressing potential security issues such as data privacy, model secrecy, and trustworthiness. To this end, our proposed framework utilizes confidential computing and builds a chain of trust through enclave attestation primitives combined with public scrutiny and state-of-the-art software-based security techniques, enabling fair {ML} models to be securely certified and clients to verify a certified one. Our micro-benchmarks on various {ML} models and real-world datasets show the feasibility of the fairness certification implemented with Intel {SGX} in practice. In addition, we analyze the impact of data poisoning, which is an additional threat during data collection for fairness auditing. Based on the analysis, we illustrate the theoretical curves of fairness gap and minimal group size and the empirical results of fairness certification on poisoned datasets.},
	pages = {3488--3499},
	booktitle = {Proceedings of the {ACM} Web Conference 2022},
	publisher = {Association for Computing Machinery},
	author = {Park, Saerom and Kim, Seongmin and Lim, Yeon-sup},
	urldate = {2023-11-07},
	date = {2022-04-25},
	note = {3 citations (Crossref) [2023-11-07]},
	keywords = {Confidential computing, Algorithmic audit, Fairness, Security and privacy},
	file = {Park et al_2022_Fairness Audit of Machine Learning Models with Confidential Computing.pdf:C\:\\Users\\jakn\\Zotero\\storage\\BVVBY96U\\Park et al_2022_Fairness Audit of Machine Learning Models with Confidential Computing.pdf:application/pdf},
}

@article{valadares_confidential_2022,
	title = {Confidential computing in cloud/fog-based Internet of Things scenarios},
	volume = {19},
	issn = {2542-6605},
	url = {https://www.sciencedirect.com/science/article/pii/S2542660522000452},
	doi = {10.1016/j.iot.2022.100543},
	abstract = {Internet of Things ({IoT}) devices are increasingly present in people’s daily lives, collecting different types of data about the environment, user behavior, medical data, and others. Due to limited processing power, such devices share the collected data with cloud/fog environments, which raises concerns about users’ privacy. To ensure privacy and confidentiality guarantees, many cloud/fog-enhanced {IoT} applications use Trusted Execution Environments, such as {ARM} {TrustZone} and Intel {SGX}, which are the basis for Confidential Computing. Confidential Computing aims at protecting data during processing, besides transit and rest. This paper presents a review regarding {TEEs}’ adoption to protect data in cloud/fog-based {IoT} applications, focusing on the two aforementioned technologies. We highlight the challenges in adopting these technologies and discuss the vulnerabilities present in both Intel {SGX} and {ARM} {TrustZone}.},
	pages = {100543},
	journaltitle = {Internet of Things},
	author = {Valadares, Dalton Cézane Gomes and Will, Newton Carlos and Spohn, Marco Aurélio and Santos, Danilo Freire de Souza and Perkusich, Angelo and Gorgônio, Kyller Costa},
	urldate = {2023-11-07},
	date = {2022-08-01},
	note = {6 citations (Crossref) [2023-11-07]},
	keywords = {{ARM} {trustZone}, Confidential computing, Intel {SGX}, Trusted execution environments},
	file = {Valadares et al_2022_Confidential computing in cloud-fog-based Internet of Things scenarios.pdf:C\:\\Users\\jakn\\Zotero\\storage\\UH9Y9SXX\\Valadares et al_2022_Confidential computing in cloud-fog-based Internet of Things scenarios.pdf:application/pdf},
}

@article{chien_group-oriented_2018,
	title = {Group-Oriented Range-Bound Key Agreement for Internet of Things Scenarios},
	volume = {5},
	issn = {2327-4662},
	url = {https://ieeexplore.ieee.org/abstract/document/8319421?casa_token=eUJvP2D1NosAAAAA:zv6gnnPc8O8OR8Y3SWl7XL0Au49BAxxRLc9yIgl75ugzXdCL--QiLxbPM91l9exCJYbLOlK6},
	doi = {10.1109/JIOT.2018.2817075},
	abstract = {Authenticating the Internet-of-Things ({IoT}) devices in mobile systems is extremely challenging, because there will be billions of the {IoT} devices. Most existent proposals only focus on reducing the number of interactions to reduce the authentication overhead. However, there are several critical issues that need to be tackled. In this paper, we address the aggregated authentication overhead issue, the secure key agreement challenges, and the homogeneous trust and authorization issue in the mobile-system-based {IoT} scenarios. Based on the range-bound key assignment technique and our grouping mechanism, we propose the group-oriented-range-bound authenticated key agreement to solve these challenges. The main contributions are threefold. First, it drastically reduces the aggregated authentication overhead. Second, it greatly improves the security properties of the key agreement. Third, it facilitates the service providers the fine-grained control of the authentication delegation. To the best of our knowledge, the scheme demands the least authentication overhead among its counterparts; it is the first key agreement scheme that deals specifically with the homogeneous trust and authorization issue and facilitates the dynamic and adaptive authentication delegation. The security properties of the key agreement schemes are verified using a formal security verification tool, the {AVISPA}, and are analytically proved.},
	pages = {1890--1903},
	number = {3},
	journaltitle = {{IEEE} Internet of Things Journal},
	author = {Chien, Hung-Yu},
	urldate = {2023-11-07},
	date = {2018-06},
	note = {18 citations (Crossref) [2023-11-07]
Conference Name: {IEEE} Internet of Things Journal},
	file = {Chien_2018_Group-Oriented Range-Bound Key Agreement for Internet of Things Scenarios.pdf:C\:\\Users\\jakn\\Zotero\\storage\\AQ2RM36S\\Chien_2018_Group-Oriented Range-Bound Key Agreement for Internet of Things Scenarios.pdf:application/pdf},
}

@inproceedings{zhao_towards_2022,
	title = {Towards A Secure Joint Cloud With Confidential Computing},
	url = {https://ieeexplore.ieee.org/abstract/document/9898084?casa_token=MHwxg7CyKUcAAAAA:8loTeN0f5cBjSPndwr50fb5lD7GtT8AdSpLKpARz8F4l_m19cv-vg8ftqJGfEYozj6ZoGsYJ},
	doi = {10.1109/JCC56315.2022.00019},
	abstract = {As data security in public clouds attracts more attention and concerns, researchers and practitioners have proposed techniques to secure cloud computing. Confidential computing ({CC}) is a compelling approach that guarantees both privacy and integrity of data and code in public clouds. In this paper, we first survey the status of {CC} in today’s commercialized public clouds, including the cloud {CC} abstractions, infrastructures, metrics, third-party service vendors, and real-world cloud use cases. We also discover the limitations such as re-programming efforts, extra cost, limited availability, etc. We further take a step forward to prospect {CC} in the joint cloud scenario. We finally showcase the challenges of realizing a secure joint cloud and propose possible solutions.},
	eventtitle = {2022 {IEEE} International Conference on Joint Cloud Computing ({JCC})},
	pages = {79--88},
	booktitle = {2022 {IEEE} International Conference on Joint Cloud Computing ({JCC})},
	author = {Zhao, Xuyang and Li, Mingyu and Feng, Erhu and Xia, Yubin},
	urldate = {2023-11-07},
	date = {2022-08},
	note = {1 citations (Crossref) [2023-11-07]},
	file = {Zhao et al_2022_Towards A Secure Joint Cloud With Confidential Computing.pdf:C\:\\Users\\jakn\\Zotero\\storage\\NBF7SQ4C\\Zhao et al_2022_Towards A Secure Joint Cloud With Confidential Computing.pdf:application/pdf},
}

@inproceedings{mulligan_confidential_2021,
	title = {Confidential Computing—a brave new world},
	url = {https://ieeexplore.ieee.org/abstract/document/9604800?casa_token=KIrH7DvYkwsAAAAA:OMiD5bJ_3R_TpUMl9XGDc3vfvQc5aspihcoorUMiekwkUgfJUz977W6CVIrlC6H-7gxrzM2Y},
	doi = {10.1109/SEED51797.2021.00025},
	abstract = {The semiconductor industry is witnessing a nascent security paradigm shift in the rise of Confidential Computing. Driven by the need to protect computations delegated to co-tenanted machines operated by Cloud Computing services, mainstream instruction set architectures are gradually introducing novel features that can be used to establish protected isolates offering strong integrity and confidentiality guarantees to code and data contained within. Coupled with a Remote Attestation protocol, a third-party may request the launch of an isolate on an otherwise untrusted machine and know—with a high degree of assurance—that a payload of code and data was indeed loaded into a legitimate isolate with a particular configuration.We argue that this ability to reliably establish a safe “beach-head” on an untrusted third-party’s machine has far-reaching consequences with applications beyond protecting workloads delegated to Cloud Computing services. In a future world where facilities for Confidential Computing are widely deployed and used, we imagine a utopia where inadvertent data leakage is a curiosity of a bygone age, with encrypted data moving from isolate to isolate and never resting in plaintext. Moreover, data is only released in explicitly delimited ways for processing, with systems and individuals exhibiting fine-grained control over data.We report on recent activities within Arm in attempting to realize this vision, and hope that this paper acts as a “call to arms” to others to join with us in fully exploring the potential of these emerging technologies.},
	eventtitle = {2021 International Symposium on Secure and Private Execution Environment Design ({SEED})},
	pages = {132--138},
	booktitle = {2021 International Symposium on Secure and Private Execution Environment Design ({SEED})},
	author = {Mulligan, Dominic P. and Petri, Gustavo and Spinale, Nick and Stockwell, Gareth and Vincent, Hugo J. M.},
	urldate = {2023-11-07},
	date = {2021-09},
	note = {9 citations (Crossref) [2023-11-07]},
	file = {Mulligan et al_2021_Confidential Computing—a brave new world.pdf:C\:\\Users\\jakn\\Zotero\\storage\\CTW4SRY4\\Mulligan et al_2021_Confidential Computing—a brave new world.pdf:application/pdf},
}


@incollection{hmac_keying_1996,
	location = {Berlin, Heidelberg},
	title = {Keying Hash Functions for Message Authentication},
	volume = {1109},
	isbn = {978-3-540-61512-5 978-3-540-68697-2},
	url = {http://link.springer.com/10.1007/3-540-68697-5_1},
	abstract = {The use of cryptographic hash functions like {MD}5 or {SHA} for message authentication has become a standard approach in many Internet applications and protocols. Though very easy to implement, these mechanisms are usually based on ad hoc techniques that lack a sound security analysis.},
	pages = {1--15},
	booktitle = {Advances in Cryptology — {CRYPTO} ’96},
	publisher = {Springer Berlin Heidelberg},
	author = {Bellare, Mihir and Canetti, Ran and Krawczyk, Hugo},
	editor = {Koblitz, Neal},
	editorb = {Goos, Gerhard and Hartmanis, Juris and Van Leeuwen, Jan},
	editorbtype = {redactor},
	urldate = {2024-02-19},
	date = {1996},
	langid = {english},
	doi = {10.1007/3-540-68697-5_1},
	note = {Series Title: Lecture Notes in Computer Science},
	file = {Bellare et al. - 1996 - Keying Hash Functions for Message Authentication.pdf:C\:\\Users\\jakn\\Zotero\\storage\\U3QVQGIT\\Bellare et al. - 1996 - Keying Hash Functions for Message Authentication.pdf:application/pdf},
}


@inproceedings{novkovic_confidential_2021,
	title = {Confidential Computing as an Attempt to Secure Service Provider's Confidential Client Data in a Multi-Tenant Cloud Environment},
	url = {https://ieeexplore.ieee.org/abstract/document/9597198?casa_token=UkSRUM5ffcIAAAAA:SApEP-ywH_Jie0SzmbdHA1Vb1VhNvewt4WT7qc0IcAf9ChjPnSmPAsGo0bVzYw0fsrQE3trs},
	doi = {10.23919/MIPRO52101.2021.9597198},
	abstract = {Cloud-oriented infrastructure posed itself as a predominant deployment paradigm in the recent decade due to its ease of provisioning and relatively low cost. However, entrusting a third party with sensitive data in a multi-tenant environment brings about increased data breach risks. The aim of this paper is to give an insight into challenges and threats encountered in mitigating data breach and repudiation risks for service providers utilizing cloud-based environments. Through constructing and studying a possible cloud-based service, we form a corresponding threat model with a special focus on risks originating from internal actors. We explore confidential computing as a possible solution for data confidentiality and mitigation of internal data breach risks for Software as a Service ({SaaS}) providers.},
	eventtitle = {2021 44th International Convention on Information, Communication and Electronic Technology ({MIPRO})},
	pages = {1213--1218},
	booktitle = {2021 44th International Convention on Information, Communication and Electronic Technology ({MIPRO})},
	author = {Novković, Bojan and Božić, Anita and Golub, Marin and Groš, Stjepan},
	urldate = {2023-11-07},
	date = {2021-09},
	note = {2 citations (Crossref) [2023-11-07]
{ISSN}: 2623-8764},
	file = {Novković et al_2021_Confidential Computing as an Attempt to Secure Service Provider's Confidential.pdf:C\:\\Users\\jakn\\Zotero\\storage\\6QCZ2PW7\\Novković et al_2021_Confidential Computing as an Attempt to Secure Service Provider's Confidential.pdf:application/pdf},
}

@inproceedings{zhu_enabling_2020,
	title = {Enabling Rack-scale Confidential Computing using Heterogeneous Trusted Execution Environment},
	url = {https://ieeexplore.ieee.org/abstract/document/9152787?casa_token=5-BY1Rk5ZyMAAAAA:caZlINjJd9PoyxswPHS_meMBNFd_luSK1Sg8v4VBi0VcR5PeTyz7j8jTzsbgKbQxZ1rosee7},
	doi = {10.1109/SP40000.2020.00054},
	abstract = {With its huge real-world demands, large-scale confidential computing still cannot be supported by today’s Trusted Execution Environment ({TEE}), due to the lack of scalable and effective protection of high-throughput accelerators like {GPUs}, {FPGAs}, and {TPUs} etc. Although attempts have been made recently to extend the {CPU}-like enclave to {GPUs}, these solutions require change to the {CPU} or {GPU} chips, may introduce new security risks due to the side-channel leaks in {CPU}-{GPU} communication and are still under the resource constraint of today’s {CPU} {TEE}.To address these problems, we present the first Heterogeneous {TEE} design that can truly support large-scale compute or data intensive ({CDI}) computing, without any chip-level change. Our approach, called {HETEE}, is a device for centralized management of all computing units (e.g., {GPUs} and other accelerators) of a server rack. It is uniquely designed to work with today’s data centres and clouds, leveraging modern resource pooling technologies to dynamically compartmentalize computing tasks, and enforce strong isolation and reduce {TCB} through hardware support. More specifically, {HETEE} utilizes the {PCIe} {ExpressFabric} to allocate its accelerators to the server node on the same rack for a non-sensitive {CDI} task, and move them back into a secure enclave in response to the demand for confidential computing. Our design runs a thin {TCB} stack for security management on a security controller ({SC}), while leaving a large set of software (e.g., {AI} runtime, {GPU} driver, etc.) to the integrated microservers that operate enclaves. An enclaves is physically isolated from others through hardware and verified by the {SC} at its inception. Its microserver and computing units are restored to a secure state upon termination.We implemented {HETEE} on a real hardware system, and evaluated it with popular neural network inference and training tasks. Our evaluations show that {HETEE} can easily support the {CDI} tasks on the real-world scale and incurred a maximal throughput overhead of 2.17\% for inference and 0.95\% for training on {ResNet}152.},
	eventtitle = {2020 {IEEE} Symposium on Security and Privacy ({SP})},
	pages = {1450--1465},
	booktitle = {2020 {IEEE} Symposium on Security and Privacy ({SP})},
	author = {Zhu, Jianping and Hou, Rui and Wang, {XiaoFeng} and Wang, Wenhao and Cao, Jiangfeng and Zhao, Boyan and Wang, Zhongpu and Zhang, Yuhui and Ying, Jiameng and Zhang, Lixin and Meng, Dan},
	urldate = {2023-11-07},
	date = {2020-05},
	note = {31 citations (Crossref) [2023-11-07]
{ISSN}: 2375-1207},
	file = {Zhu et al_2020_Enabling Rack-scale Confidential Computing using Heterogeneous Trusted.pdf:C\:\\Users\\jakn\\Zotero\\storage\\GSB55G6L\\Zhu et al_2020_Enabling Rack-scale Confidential Computing using Heterogeneous Trusted.pdf:application/pdf},
}

@misc{noauthor_multi-key-total-memory-encryption-spec-14pdf_nodate,
	title = {multi key total memory encryption specification V1.4},
        author={Intel Corporation},
        URL = {https://cdrdv2-public.intel.com/679154/multi-key-total-memory-encryption-spec-1.4.pdf},
	file = {multi-key-total-memory-encryption-spec-1.4.pdf:C\:\\Users\\jakn\\Zotero\\storage\\62D3SA76\\multi-key-total-memory-encryption-spec-1.4.pdf:application/pdf},
}

@misc{noauthor_white_nodate,
	title = {White Paper - Linux Stack for Intel® {TDX} 1.5 v0.1},
        author = {Intel Coproration},
        URL = {https://www.intel.com/content/www/us/en/content-details/790888/whitepaper-linux-stacks-for-intel-trust-domain-extensions-1-5.html},
	file = {White Paper - Linux Stack for Intel® TDX 1.5-v0.1.pdf:C\:\\Users\\jakn\\Zotero\\storage\\ECSHRCXG\\White Paper - Linux Stack for Intel® TDX 1.5-v0.1.pdf:application/pdf},
}

@inproceedings{sahita_security_2021,
	title = {Security analysis of confidential-compute instruction set architecture for virtualized workloads},
	url = {https://ieeexplore.ieee.org/abstract/document/9604355},
	doi = {10.1109/SEED51797.2021.00024},
	abstract = {Data in-use protection is critical to the data use lifecycle. Trusted execution environments supported by hardware are a key element of a system that provides data protection. The computing model focused on data protection via hardware-attested trusted execution engines is broadly called confidential computing. In this paper, we describe a security analysis of an Intel {ISA} extension called Intel® Trust Domain Extensions (Intel® {TDX}) to host confidential compute virtual machine workloads (called Trust Domain Virtual Machines or {TD} {VMs}) in the cloud. This paper describes the threat model and security architecture for Intel {TDX}. We describe the architecture principles, design constraints, and outline open problems that should be solved to increase the utility and scale of confidential computing models.},
	eventtitle = {2021 International Symposium on Secure and Private Execution Environment Design ({SEED})},
	pages = {121--131},
	booktitle = {2021 International Symposium on Secure and Private Execution Environment Design ({SEED})},
	author = {Sahita, Ravi and Caspi, Dror and Huntley, Barry and Scarlata, Vincent and Chaikin, Baruch and Chhabra, Siddhartha and Aharon, Arie and Ouziel, Ido},
	urldate = {2023-11-07},
	date = {2021-09},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\jakn\\Zotero\\storage\\XGZ4GPVD\\9604355.html:text/html;Sahita et al_2021_Security analysis of confidential-compute instruction set architecture for.pdf:C\:\\Users\\jakn\\Zotero\\storage\\3LYH6ZRR\\Sahita et al_2021_Security analysis of confidential-compute instruction set architecture for.pdf:application/pdf},
}

@article{coker_principles_2011,
	title = {Principles of remote attestation},
	volume = {10},
	issn = {1615-5270},
	url = {https://doi.org/10.1007/s10207-011-0124-7},
	doi = {10.1007/s10207-011-0124-7},
	abstract = {Remote attestation is the activity of making a claim about properties of a target by supplying evidence to an appraiser over a network. We identify five central principles to guide development of attestation systems. We argue that (i) attestation must be able to deliver temporally fresh evidence; (ii) comprehensive information about the target should be accessible; (iii) the target, or its owner, should be able to constrain disclosure of information about the target; (iv) attestation claims should have explicit semantics to allow decisions to be derived from several claims; and (v) the underlying attestation mechanism must be trustworthy. We illustrate how to acquire evidence from a running system, and how to transport it via protocols to remote appraisers. We propose an architecture for attestation guided by these principles. Virtualized platforms, which are increasingly well supported on stock hardware, provide a natural basis for our attestation architecture.},
	pages = {63--81},
	number = {2},
	journaltitle = {Int. J. Inf. Secur.},
	author = {Coker, George and Guttman, Joshua and Loscocco, Peter and Herzog, Amy and Millen, Jonathan and O’Hanlon, Brian and Ramsdell, John and Segall, Ariel and Sheehy, Justin and Sniffen, Brian},
	urldate = {2023-11-07},
	date = {2011-06-01},
	langid = {english},
	keywords = {Cryptographic protocols, Hardware Security Modules, Operating system security architecture, Strand spaces, Trust and attestation},
	file = {Coker et al_2011_Principles of remote attestation.pdf:C\:\\Users\\jakn\\Zotero\\storage\\6SN872SU\\Coker et al_2011_Principles of remote attestation.pdf:application/pdf},
}

@misc{banks_remote_2021,
	title = {Remote Attestation: A Literature Review},
	url = {http://arxiv.org/abs/2105.02466},
	shorttitle = {Remote Attestation},
	abstract = {With the rising number of {IoT} devices, the security of such devices becomes increasingly important. Remote attestation ({RA}) is a distinct security service that allows a remote verifer to reason about the state of an untrusted remote prover (device). Paradigms of remote attestation span from exclusively software, in software-based attestation, to exclusively hardware-based. In between the extremes are hybrid attestation that utilize the enhanced security of secure hardware components in combination with the lower cost of purely software-based implementations. Traditional remote attestation protocols are concerned with reasoning about the state of a prover. However, extensions to remote attestation also exist, such as code updates, device resets, erasure and attestation of the device's run-time state. Furthermore, as interconnected {IoT} devices are becoming increasingly more popular, so is the need for attestation of device swarms. We will describe and evaluate the state-of-the-art for remote attestation, which covers singular attestation of devices as well as newer research in the area of formally verified {RA} protocols, swarm attestation and control-flow attestation.},
	number = {{arXiv}:2105.02466},
	publisher = {{arXiv}},
	author = {Banks, Alexander Sprogø and Kisiel, Marek and Korsholm, Philip},
	urldate = {2023-11-07},
	date = {2021-05-12},
	eprinttype = {arxiv},
	eprint = {2105.02466 [cs]},
	keywords = {Computer Science - Cryptography and Security},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\5UX9E6TZ\\2105.html:text/html;Banks et al_2021_Remote Attestation.pdf:C\:\\Users\\jakn\\Zotero\\storage\\KSPR44PQ\\Banks et al_2021_Remote Attestation.pdf:application/pdf},
}

@inproceedings{anati_innovative_2013,
	title = {Innovative technology for {CPU} based attestation and sealing},
	volume = {13},
	url = {https://www.intel.com/content/dam/develop/external/us/en/documents/hasp-2013-innovative-technology-for-attestation-and-sealing-413939.pdf},
	booktitle = {Proceedings of the 2nd international workshop on hardware and architectural support for security and privacy},
	publisher = {{ACM} New York, {NY}, {USA}},
	author = {Anati, Ittai and Gueron, Shay and Johnson, Simon and Scarlata, Vincent},
	urldate = {2023-11-07},
	date = {2013},
	note = {Issue: 7},
	keywords = {⛔ No {DOI} found},
	file = {Anati et al_2013_Innovative technology for CPU based attestation and sealing.pdf:C\:\\Users\\jakn\\Zotero\\storage\\7WQ3Q88V\\Anati et al_2013_Innovative technology for CPU based attestation and sealing.pdf:application/pdf},
}

@collection{garcia_diaz_confidential_2022,
	location = {Singapore},
	title = {Confidential Computing: Hardware Based Memory Protection},
	isbn = {978-981-19304-4-7 978-981-19304-5-4},
	url = {https://link.springer.com/10.1007/978-981-19-3045-4},
	series = {Advanced Technologies and Societal Change},
	shorttitle = {Confidential Computing},
	publisher = {Springer Nature},
	editor = {Garcia Diaz, Vicente and Rincón Aponte, Gloria Jeanette},
	urldate = {2023-11-08},
	date = {2022},
	langid = {english},
	doi = {10.1007/978-981-19-3045-4},
	keywords = {Blockchain, Cloud computing, Cloud security, Data encryption, Data protection, Hardware-level encryption, Private analytics, Public Clouds, Secure analytics, Security encryption},
	file = {Garcia Diaz_Rincón Aponte_2022_Confidential Computing.pdf:C\:\\Users\\jakn\\Zotero\\storage\\UPYHULHH\\Garcia Diaz_Rincón Aponte_2022_Confidential Computing.pdf:application/pdf},
}


@paper{schutz_general_nodate,
	title = {General overview of Intel {SGX}},
	abstract = {Intel Secure Guard Extensions is a hardware feature available to Intel processors that provides a trusted execution environment fit for remote computation. It enables the creation of secure enclaves, handled by the trusted processor, that are isolated from all other software including the host’s system software. They also provide means for users to remotely attest the legitimacy of the enclaves. The mechanisms that were developed to achieve this will be presented in this overview.},
	author = {Schütz, Julian},
	langid = {english},
        date={2023-09-01},
	file = {Schütz - General overview of Intel SGX.pdf:C\:\\Users\\jakn\\Zotero\\storage\\ECGZPBLS\\Schütz - General overview of Intel SGX.pdf:application/pdf},
}


@book{ucedavelez_risk_2015,
	location = {Chicester, {UNITED} {STATES}},
	title = {Risk Centric Threat Modeling: Process for Attack Simulation and Threat Analysis},
	isbn = {978-1-118-98836-7},
	url = {http://ebookcentral.proquest.com/lib/karlsruhetech/detail.action?docID=1895868},
	shorttitle = {Risk Centric Threat Modeling},
	abstract = {This book introduces the Process for Attack Simulation \& Threat Analysis ({PASTA}) threat modeling methodology. It provides an introduction to various types of application threat modeling and introduces a risk-centric methodology aimed at applying security countermeasures that are commensurate to the possible impact that could be sustained from defined threat models, vulnerabilities, weaknesses, and attack patterns. This book describes how to apply application threat modeling as an advanced preventive form of security. The authors discuss the methodologies, tools, and case studies of successful application threat modeling techniques. Chapter 1 provides an overview of threat modeling, while Chapter 2 describes the objectives and benefits of threat modeling. Chapter 3 focuses on existing threat modeling approaches, and Chapter 4 discusses integrating threat modeling within the different types of Software Development Lifecycles ({SDLCs}). Threat modeling and risk management is the focus of Chapter 5. Chapter 6 and Chapter 7 examine Process for Attack Simulation and Threat Analysis ({PASTA}). Finally, Chapter 8 shows how to use the {PASTA} risk-centric threat modeling process to analyze the risks of specific threat agents targeting web applications. This chapter focuses specifically on the web application assets that include customer’s confidential data and business critical functionality that the web application provides. • Provides a detailed walkthrough of the {PASTA} methodology alongside software development activities, normally conducted via a standard {SDLC} process • Offers precise steps to take when combating threats to businesses • Examines real-life data breach incidents and lessons for risk management Risk Centric Threat Modeling: Process for Attack Simulation and Threat Analysis is a resource for software developers, architects, technical risk managers, and seasoned security professionals.},
	publisher = {Wiley},
	author = {{UcedaVelez}, Tony and Morana, Marco M.},
	urldate = {2023-11-08},
	date = {2015},
	keywords = {{POLITICAL} {SCIENCE} / Political Freedom \& Security / Terrorism},
	file = {ProQuest Ebook Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\DMZ4JQ5F\\detail.html:text/html;Risk_Centric_Threat_Modeling_Process_for_Attack_Si..._----_(Chapter_1_Threat_Modeling_Overview_).pdf:C\:\\Users\\jakn\\Zotero\\storage\\A87WN46B\\Risk_Centric_Threat_Modeling_Process_for_Attack_Si..._----_(Chapter_1_Threat_Modeling_Overview_).pdf:application/pdf;UcedaVelez - Risk Centric Threat Modeling.pdf:C\:\\Users\\jakn\\Zotero\\storage\\MZWVKULL\\UcedaVelez - Risk Centric Threat Modeling.pdf:application/pdf},
}

@book{shostack_threat_2014,
	location = {Newark, {UNITED} {STATES}},
	title = {Threat Modeling: Designing for Security},
	isbn = {978-1-118-82269-2},
	url = {http://ebookcentral.proquest.com/lib/karlsruhetech/detail.action?docID=1629177},
	shorttitle = {Threat Modeling},
	abstract = {The only security book to be chosen as a Dr. Dobbs Jolt Award Finalist since Bruce Schneier's Secrets and Lies and Applied Cryptography! Adam Shostack is responsible for security development lifecycle threat modeling at Microsoft and is one of a handful of threat modeling experts in the world. Now, he is sharing his considerable expertise into this unique book. With pages of specific actionable advice, he details how to build better security into the design of systems, software, or services from the outset. You'll explore various threat modeling approaches, find out how to test your designs against threats, and learn effective ways to address threats that have been validated at Microsoft and other top companies. Systems security managers, you'll find tools and a framework for structured thinking about what can go wrong. Software developers, you'll appreciate the jargon-free and accessible introduction to this essential skill. Security professionals, you'll learn to discern changing threats and discover the easiest ways to adopt a structured approach to threat modeling. Provides a unique how-to for security and software developers who need to design secure products and systems and test their designs Explains how to threat model and explores various threat modeling approaches, such as asset-centric, attacker-centric and software-centric Provides effective approaches and techniques that have been proven at Microsoft and elsewhere Offers actionable how-to advice not tied to any specific software, operating system, or programming language Authored by a Microsoft professional who is one of the most prominent threat modeling experts in the world As more software is delivered on the Internet or operates on Internet-connected devices, the design of secure software is absolutely critical. Make sure you're ready with Threat Modeling: Designing for Security.},
	publisher = {John Wiley \& Sons, Incorporated},
	author = {Shostack, Adam},
	urldate = {2023-11-08},
	date = {2014},
	keywords = {Computer security},
	file = {ProQuest Ebook Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\7VMQGAWA\\detail.html:text/html;Threat_Modeling_Designing_for_Security_----_(Part_I_Getting_Started_).pdf:C\:\\Users\\jakn\\Zotero\\storage\\KEV7KC48\\Threat_Modeling_Designing_for_Security_----_(Part_I_Getting_Started_).pdf:application/pdf;Threat_Modeling_Designing_for_Security_----_(Part_II_Finding_Threats_).pdf:C\:\\Users\\jakn\\Zotero\\storage\\W338QVIN\\Threat_Modeling_Designing_for_Security_----_(Part_II_Finding_Threats_).pdf:application/pdf},
}

@misc{hashemi_data_2022,
	title = {Data Leakage via Access Patterns of Sparse Features in Deep Learning-based Recommendation Systems},
	url = {http://arxiv.org/abs/2212.06264},
	abstract = {Online personalized recommendation services are generally hosted in the cloud where users query the cloud-based model to receive recommended input such as merchandise of interest or news feed. State-of-the-art recommendation models rely on sparse and dense features to represent users' profile information and the items they interact with. Although sparse features account for 99\% of the total model size, there was not enough attention paid to the potential information leakage through sparse features. These sparse features are employed to track users' behavior, e.g., their click history, object interactions, etc., potentially carrying each user's private information. Sparse features are represented as learned embedding vectors that are stored in large tables, and personalized recommendation is performed by using a specific user's sparse feature to index through the tables. Even with recently-proposed methods that hides the computation happening in the cloud, an attacker in the cloud may be able to still track the access patterns to the embedding tables. This paper explores the private information that may be learned by tracking a recommendation model's sparse feature access patterns. We first characterize the types of attacks that can be carried out on sparse features in recommendation models in an untrusted cloud, followed by a demonstration of how each of these attacks leads to extracting users' private information or tracking users by their behavior over time.},
	number = {{arXiv}:2212.06264},
	publisher = {{arXiv}},
	author = {Hashemi, Hanieh and Xiong, Wenjie and Ke, Liu and Maeng, Kiwan and Annavaram, Murali and Suh, G. Edward and Lee, Hsien-Hsin S.},
	urldate = {2024-03-08},
	date = {2022-12-12},
	eprinttype = {arxiv},
	eprint = {2212.06264 [cs]},
	keywords = {Computer Science - Computational Engineering, Finance, and Science, Computer Science - Cryptography and Security, Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Machine Learning},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\ZIYVJ3Z5\\2212.html:text/html;Hashemi et al_2022_Data Leakage via Access Patterns of Sparse Features in Deep Learning-based.pdf:C\:\\Users\\jakn\\Zotero\\storage\\KTMQNGB8\\Hashemi et al_2022_Data Leakage via Access Patterns of Sparse Features in Deep Learning-based.pdf:application/pdf},
}


@misc{intel_corporation_design_2022,
	title = {Design Guide for Intel® {SGX} Provisioning Certificate Caching Service},
	url = {https://download.01.org/intel-sgx/sgx-dcap/1.10/linux/docs/SGX_DCAP_Caching_Service_Design_Guide.pdf},
	author = {{Intel Corporation}},
	date = {2022-11-28},
	langid = {english},
	file = {Design Guide for Intel® SGX Provisioning Certifica.pdf:C\:\\Users\\jakn\\Zotero\\storage\\25QCFY8U\\Design Guide for Intel® SGX Provisioning Certifica.pdf:application/pdf},
}

@incollection{shao_type-based_2007,
	location = {Berlin, Heidelberg},
	title = {Type-Based Verification of Correspondence Assertions for Communication Protocols},
	volume = {4807},
	isbn = {978-3-540-76636-0},
	url = {http://link.springer.com/10.1007/978-3-540-76637-7_13},
	abstract = {Gordon and Jeﬀrey developed a type system for checking correspondence assertions. The correspondence assertions, proposed by Woo and Lam, state that when a certain event (called an “end” event) happens, the corresponding “begin” event must have occurred before. They can be used for checking authenticity in communication protocols. In this paper, we reﬁne Gordon and Jeﬀrey’s type system and develop a polynomial-time type inference algorithm, so that correspondence assertions can be veriﬁed fully automatically, without any type annotations. The main key idea that enables polynomial-time type inference is to introduce fractional eﬀects; Without the fractional eﬀects, the type inference problem is {NP}-hard.},
	pages = {191--205},
	booktitle = {Programming Languages and Systems},
	publisher = {Springer Berlin Heidelberg},
	author = {Kikuchi, Daisuke and Kobayashi, Naoki},
	editor = {Shao, Zhong},
	urldate = {2024-02-29},
	date = {2007},
	langid = {english},
	doi = {10.1007/978-3-540-76637-7_13},
	note = {Series Title: Lecture Notes in Computer Science},
	file = {Kikuchi and Kobayashi - 2007 - Type-Based Verification of Correspondence Assertio.pdf:C\:\\Users\\jakn\\Zotero\\storage\\NKMQEHC3\\Kikuchi and Kobayashi - 2007 - Type-Based Verification of Correspondence Assertio.pdf:application/pdf},
}

@online{frederic_stumpf_leveraging_2011,
	title = {Leveraging Attestation Techniques for Trust Establishment in Distributed Systems},
	url = {https://tuprints.ulb.tu-darmstadt.de/2078/1/PhD_Thesis_Stumpf.pdf},
	author = {{Frederic Stumpf}},
	urldate = {2024-02-29},
	date = {2011-04-18},
	file = {PhD_Thesis_Stumpf.pdf:C\:\\Users\\jakn\\Zotero\\storage\\26W9P6GH\\PhD_Thesis_Stumpf.pdf:application/pdf},
}


@book{ross_anderson_security_nodate,
	title = {Security Engineering},
	author = {{Ross Anderson}},
        url = {https://www.cl.cam.ac.uk/~rja14/book.html},
	file = {Ross Anderson - Security Engineering.pdf:C\:\\Users\\jakn\\Zotero\\storage\\H49PX6AE\\Ross Anderson - Security Engineering.pdf:application/pdf},
}



@misc{john_connecting_2017,
	title = {Connecting the Dots: Privacy Leakage via Write-Access Patterns to the Main Memory},
	url = {http://arxiv.org/abs/1702.03965},
	shorttitle = {Connecting the Dots},
	abstract = {Data-dependent access patterns of an application to an untrusted storage system are notorious for leaking sensitive information about the user's data. Previous research has shown how an adversary capable of monitoring both read and write requests issued to the memory can correlate them with the application to learn its sensitive data. However, information leakage through only the write access patterns is less obvious and not well studied in the current literature. In this work, we demonstrate an actual attack on power-side-channel resistant Montgomery's ladder based modular exponentiation algorithm commonly used in public key cryptography. We infer the complete 512-bit secret exponent in \${\textbackslash}sim3.5\$ minutes by virtue of just the write access patterns of the algorithm to the main memory. In order to learn the victim algorithm's write access patterns under realistic settings, we exploit a compromised {DMA} device to take frequent snapshots of the application's address space, and then run a simple differential analysis on these snapshots to find the write access sequence. The attack has been shown on an Intel Core({TM}) i7-4790 3.60GHz processor based system. We further discuss a possible attack on {McEliece} public-key cryptosystem that also exploits the write-access patterns to learn the secret key.},
	number = {{arXiv}:1702.03965},
	publisher = {{arXiv}},
	author = {John, Tara Merin and Haider, Syed Kamran and Omar, Hamza and van Dijk, Marten},
	urldate = {2024-03-08},
	date = {2017-06-17},
	eprinttype = {arxiv},
	eprint = {1702.03965 [cs]},
	keywords = {Computer Science - Cryptography and Security},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\GEI7QIAX\\1702.html:text/html;John et al_2017_Connecting the Dots.pdf:C\:\\Users\\jakn\\Zotero\\storage\\CB8C2DXF\\John et al_2017_Connecting the Dots.pdf:application/pdf},
}

@article{noauthor_large_nodate,
	title = {Large Language Models},
	langid = {english},
	file = {Large Language Models.pdf:C\:\\Users\\jakn\\Zotero\\storage\\N2GKVQ54\\Large Language Models.pdf:application/pdf},
}

@book{sardar_formal_2020,
	title = {Formal Foundations for Intel {SGX} Data Center Attestation Primitives},
	abstract = {Intel has recently offered third-party attestation services, called Data Center Attestation Primitives ({DCAP}), for a data center to create its own attestation infrastructure. These services address the availability concerns and improve the performance as compared to the remote attestation based on Enhanced Privacy {ID} ({EPID}). Practical developments, such as Hyperledger Avalon, have already planned to support {DCAP} in their roadmap. However, the lack of formal proof for {DCAP} leads to security concerns. To fill this gap, we propose an automated, rigorous, and sound formal approach to specify and verify the remote at-testation based on Intel {SGX} {DCAP} under the assumption that there are no side-channel attacks and no vulnerabilities inside the enclave. In the proposed approach, the data center configuration and operational policies are specified to generate the symbolic model, and security goals are specified as security properties to produce verification results. The evaluation of non-Quoting Verification Enclave-based {DCAP} indicates that the confidentiality of secrets and integrity of data is preserved against a Dolev-Yao adversary in this technology. We also present a few of the many inconsistencies found in the existing literature on Intel {SGX} {DCAP} during formal specification.},
	author = {Sardar, Muhammad and Faqeh, Rasha and Fetzer, Christof},
	date = {2020-07-09},
	file = {Sardar et al_2020_Formal Foundations for Intel SGX Data Center Attestation Primitives.pdf:C\:\\Users\\jakn\\Zotero\\storage\\NG8ARMFI\\Sardar et al_2020_Formal Foundations for Intel SGX Data Center Attestation Primitives.pdf:application/pdf},
    URL = {https://www.researchgate.net/publication/375592777_Formal_Specification_and_Verification_of_Architecturally-defined_Attestation_Mechanisms_in_Arm_CCA_and_Intel_TDX},
}

@misc{scarlata_supporting_nodate,
	title = {Supporting Third Party Attestation for Intel® {SGX} with Intel® Data Center Attestation Primitives},
	abstract = {Intel® Software Guard Extensions ({SGX}) has an attestation and sealing capability that can be used to remotely provision secrets and secure secrets to an enclave [1]. In [2], Intel describes how Intel® Enhanced Privacy Identifier ({EPID}) based attestation keys are provisioned and describes the Intel provided online services to support this architecture.},
	author = {Scarlata, Vinnie and Johnson, Simon and Beaney, James and Zmijewski, Piotr},
	langid = {english},
	keywords = {⛔ No {DOI} found},
	file = {Scarlata et al. - Supporting Third Party Attestation for Intel® SGX .pdf:C\:\\Users\\jakn\\Zotero\\storage\\27SKPSZI\\Scarlata et al. - Supporting Third Party Attestation for Intel® SGX .pdf:application/pdf},
}

@article{vaswani_attention_nodate,
	title = {Attention is All you Need},
	abstract = {The dominant sequence transduction models are based on complex recurrent or convolutional neural networks that include an encoder and a decoder. The best performing models also connect the encoder and decoder through an attention mechanism. We propose a new simple network architecture, the Transformer, based solely on attention mechanisms, dispensing with recurrence and convolutions entirely. Experiments on two machine translation tasks show these models to be superior in quality while being more parallelizable and requiring signiﬁcantly less time to train. Our model achieves 28.4 {BLEU} on the {WMT} 2014 Englishto-German translation task, improving over the existing best results, including ensembles, by over 2 {BLEU}. On the {WMT} 2014 English-to-French translation task, our model establishes a new single-model state-of-the-art {BLEU} score of 41.0 after training for 3.5 days on eight {GPUs}, a small fraction of the training costs of the best models from the literature.},
	author = {Vaswani, Ashish and Shazeer, Noam and Parmar, Niki and Uszkoreit, Jakob and Jones, Llion and Gomez, Aidan N and Kaiser, Łukasz and Polosukhin, Illia},
	langid = {english},
	keywords = {⛔ No {DOI} found},
	file = {Vaswani et al. - Attention is All you Need.pdf:C\:\\Users\\jakn\\Zotero\\storage\\3PNWMRDI\\Vaswani et al. - Attention is All you Need.pdf:application/pdf},
}

@misc{devlin_bert_2019,
	title = {{BERT}: Pre-training of Deep Bidirectional Transformers for Language Understanding},
	url = {http://arxiv.org/abs/1810.04805},
	doi = {10.48550/arXiv.1810.04805},
	shorttitle = {{BERT}},
	abstract = {We introduce a new language representation model called {BERT}, which stands for Bidirectional Encoder Representations from Transformers. Unlike recent language representation models, {BERT} is designed to pre-train deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers. As a result, the pre-trained {BERT} model can be fine-tuned with just one additional output layer to create state-of-the-art models for a wide range of tasks, such as question answering and language inference, without substantial task-specific architecture modifications. {BERT} is conceptually simple and empirically powerful. It obtains new state-of-the-art results on eleven natural language processing tasks, including pushing the {GLUE} score to 80.5\% (7.7\% point absolute improvement), {MultiNLI} accuracy to 86.7\% (4.6\% absolute improvement), {SQuAD} v1.1 question answering Test F1 to 93.2 (1.5 point absolute improvement) and {SQuAD} v2.0 Test F1 to 83.1 (5.1 point absolute improvement).},
	number = {{arXiv}:1810.04805},
	publisher = {{arXiv}},
	author = {Devlin, Jacob and Chang, Ming-Wei and Lee, Kenton and Toutanova, Kristina},
	urldate = {2023-11-20},
	date = {2019-05-24},
	eprinttype = {arxiv},
	eprint = {1810.04805 [cs]},
	note = {version: 2},
	keywords = {Computer Science - Computation and Language},
	file = {arXiv Fulltext PDF:C\:\\Users\\jakn\\Zotero\\storage\\HIG743DK\\Devlin et al. - 2019 - BERT Pre-training of Deep Bidirectional Transform.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\ZMUHBKVU\\1810.html:text/html},
}

@article{ucedavelez_risk_nodate,
	title = {Risk Centric Threat Modeling},
	doi = {10.1002/9781118988374},
	author = {{UcedaVelez}, Tony},
	langid = {english},
}

@misc{costan_intel_2016,
	title = {Intel {SGX} Explained},
	url = {https://eprint.iacr.org/2016/086},
	abstract = {Intel's Software Guard Extensions ({SGX}) is a set of extensions to the Intel architecture that aims to provide integrity and privacy guarantees to security-sensitive computation performed on a computer where all the privileged software (kernel, hypervisor, etc) is potentially malicious.

This paper analyzes Intel {SGX}, based on the 3 papers that introduced it, on the Intel Software Developer's Manual (which supersedes the {SGX} manuals), on an {ISCA} 2015 tutorial, and on two patents. We use the papers, reference manuals, and tutorial as primary data sources, and only draw on the patents to fill in missing information.

This paper's contributions are a summary of the Intel-specific architectural and micro-architectural details needed to understand {SGX}, a detailed and structured presentation of the publicly available information on {SGX}, a series of intelligent guesses about some important but undocumented aspects of {SGX}, and an analysis of {SGX}'s security properties.},
	number = {2016/086},
	author = {Costan, Victor and Devadas, Srinivas},
	urldate = {2023-11-27},
	date = {2016},
	note = {Publication info: Preprint.},
	file = {Costan_Devadas_2016_Intel SGX Explained.pdf:C\:\\Users\\jakn\\Zotero\\storage\\GMU94UWB\\Costan_Devadas_2016_Intel SGX Explained.pdf:application/pdf},
}

@misc{priebe_sgx-lkl_2020,
	title = {{SGX}-{LKL}: Securing the Host {OS} Interface for Trusted Execution},
	url = {http://arxiv.org/abs/1908.11143},
	doi = {10.48550/arXiv.1908.11143},
	shorttitle = {{SGX}-{LKL}},
	abstract = {Hardware support for trusted execution in modern {CPUs} enables tenants to shield their data processing workloads in otherwise untrusted cloud environments. Runtime systems for the trusted execution must rely on an interface to the untrusted host {OS} to use external resources such as storage, network, and other functions. Attackers may exploit this interface to leak data or corrupt the computation. We describe {SGX}-{LKL}, a system for running Linux binaries inside of Intel {SGX} enclaves that only exposes a minimal, protected and oblivious host interface: the interface is (i) minimal because {SGX}-{LKL} uses a complete library {OS} inside the enclave, including file system and network stacks, which requires a host interface with only 7 calls; (ii) protected because {SGX}-{LKL} transparently encrypts and integrity-protects all data passed via low-level I/O operations; and (iii) oblivious because {SGX}-{LKL} performs host operations independently of the application workload. For oblivious disk I/O, {SGX}-{LKL} uses an encrypted ext4 file system with shuffled disk blocks. We show that {SGX}-{LKL} protects {TensorFlow} training with a 21\% overhead.},
	number = {{arXiv}:1908.11143},
	publisher = {{arXiv}},
	author = {Priebe, Christian and Muthukumaran, Divya and Lind, Joshua and Zhu, Huanzhou and Cui, Shujie and Sartakov, Vasily A. and Pietzuch, Peter},
	urldate = {2023-11-27},
	date = {2020-01-20},
	eprinttype = {arxiv},
	eprint = {1908.11143 [cs]},
	keywords = {Computer Science - Cryptography and Security, Computer Science - Operating Systems},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\5AMPLWNE\\1908.html:text/html;Priebe et al_2020_SGX-LKL.pdf:C\:\\Users\\jakn\\Zotero\\storage\\ZA7TFIUL\\Priebe et al. - 2020 - SGX-LKL Securing the Host OS Interface for Truste.pdf:application/pdf},
}

@inproceedings{chen_opera_2019,
	location = {New York, {NY}, {USA}},
	title = {{OPERA}: Open Remote Attestation for Intel's Secure Enclaves},
	isbn = {978-1-4503-6747-9},
	url = {https://dl.acm.org/doi/10.1145/3319535.3354220},
	doi = {10.1145/3319535.3354220},
	series = {{CCS} '19},
	shorttitle = {{OPERA}},
	abstract = {Intel Software Guard Extensions ({SGX}) remote attestation enables enclaves to authenticate hardware inside which they run, and attest the integrity of their enclave memory to the remote party. To enforce direct control of attestation, Intel mandates attestation to be verified by Intel's attestation service. This Intel-centric attestation model, however, neither protects privacy nor performs efficiently when distributed and frequent attestation is required. This paper presents {OPERA}, an Open Platform for Enclave Remote Attestation. Without involving Intel's attestation service while conducting attestation, {OPERA} is unchained from Intel, although it relies on Intel to establish a chain of trust whose anchor point is the secret rooted in {SGX} hardware. {OPERA} is open, as the implementation of its attestation service is completely open, allowing any enclave developer to run her own {OPERA} service, and its execution is publicly verifiable and hence trustworthy; {OPERA} is privacy-preserving, as the attestation service does not learn which enclave is being attested or when the attestation takes place; {OPERA} is performant, as it does not rely on a single-point-of-verification and also reduces the latency of verification.},
	pages = {2317--2331},
	booktitle = {Proceedings of the 2019 {ACM} {SIGSAC} Conference on Computer and Communications Security},
	publisher = {Association for Computing Machinery},
	author = {Chen, Guoxing and Zhang, Yinqian and Lai, Ten-Hwang},
	urldate = {2023-11-27},
	date = {2019-11-06},
	keywords = {Intel {SGX}, privacy-preserving techniques, remote attestation, trusted execution environments},
	file = {Chen et al_2019_OPERA.pdf:C\:\\Users\\jakn\\Zotero\\storage\\QLZVHZH6\\Chen et al_2019_OPERA.pdf:application/pdf},
}

@misc{intel_corporation_intel_2024,
	title = {Intel® Trust Domain Extensions Whitepaper},
	url = {https://cdrdv2-public.intel.com/690419/TDX-Whitepaper-February2022.pdf},
	author = {{Intel Corporation}},
	date = {2024-02-13},
	langid = {english},
	file = {Intel® Trust Domain Extensions.pdf:C\:\\Users\\jakn\\Zotero\\storage\\FWSUQ5PB\\Intel® Trust Domain Extensions.pdf:application/pdf},
}


@misc{kelsey_second_2004,
	title = {Second Preimages on n-bit Hash Functions for Much Less than 2{\textasciicircum}n Work},
	url = {https://eprint.iacr.org/2004/304},
	abstract = {We provide a second preimage attack on all n-bit iterated
hash functions with Damgard-Merkle strengthening and n-bit
itermediate states, allowing a second preimage to be found for a
2k-message-block message with about k×2n/2+1+2n−k+1
work. Using {SHA}1 as an example, our attack can find a second preimage
for a 260 byte message in 2106 work, rather than the
previously expected 2160 work. We also provide slightly cheaper
ways to find multicollisions than the method of Joux. Both
of these results are based on expandable messages--patterns for
producing messages of varying length, which all collide on the
intermediate hash result immediately after processing the
message. We also provide algorithms for finding expandable messages for a hash function, using only a small multiple of the work done to find a single collision in the hash function.},
	number = {2004/304},
	author = {Kelsey, John and Schneier, Bruce},
	urldate = {2024-02-24},
	date = {2004},
	note = {Publication info: Published elsewhere. Unknown where it was published},
	keywords = {hash functions},
	file = {Kelsey_Schneier_2004_Second Preimages on n-bit Hash Functions for Much Less than 2^n Work.pdf:C\:\\Users\\jakn\\Zotero\\storage\\5JB9MWWJ\\Kelsey_Schneier_2004_Second Preimages on n-bit Hash Functions for Much Less than 2^n Work.pdf:application/pdf},
}

@inproceedings{bhargavan_transcript_2016,
	location = {San Diego, {CA}},
	title = {Transcript Collision Attacks: Breaking Authentication in {TLS}, {IKE}, and {SSH}},
	isbn = {978-1-891562-41-9},
	url = {https://www.ndss-symposium.org/wp-content/uploads/2017/09/transcript-collision-attacks-breaking-authentication-tls-ike-ssh.pdf},
	doi = {10.14722/ndss.2016.23418},
	shorttitle = {Transcript Collision Attacks},
	abstract = {In response to high-proﬁle attacks that exploit hash function collisions, software vendors have started to phase out the use of {MD}5 and {SHA}-1 in third-party digital signature applications such as X.509 certiﬁcates. However, weak hash constructions continue to be used in various cryptographic constructions within mainstream protocols such as {TLS}, {IKE}, and {SSH}, because practitioners argue that their use in these protocols relies only on second preimage resistance, and hence is unaffected by collisions. This paper systematically investigates and debunks this argument.},
	eventtitle = {Network and Distributed System Security Symposium},
	booktitle = {Proceedings 2016 Network and Distributed System Security Symposium},
	publisher = {Internet Society},
	author = {Bhargavan, Karthikeyan and Leurent, Gaetan},
	urldate = {2024-02-24},
	date = {2016},
	langid = {english},
	file = {Bhargavan and Leurent - 2016 - Transcript Collision Attacks Breaking Authenticat.pdf:C\:\\Users\\jakn\\Zotero\\storage\\YGSYHYJG\\Bhargavan and Leurent - 2016 - Transcript Collision Attacks Breaking Authenticat.pdf:application/pdf},
}


@misc{zhou_side-channel_nodate,
  title={Side-Channel Attacks: Ten Years After Its Publication and the Impacts on Cryptographic Module Security Testing},
  booktitle={IACR Eprint archive},
  keywords={implementation /},
  url={http://eprint.iacr.org/2005/388},
  note={ zyb@is.iscas.ac.cn 13083 received 27 Oct 2005},
  author={YongBin Zhou and DengGuo Feng},
  year=2005
}

@online{intel_corporation_mktme_2023,
	title = {{MKTME} Side Channel Impact on Intel {TDX}},
	url = {https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/best-practices/mktme-side-channel-impact-on-intel-tdx.html},
	abstract = {In certain configurations and circumstances, Intel processors are affected by some new variants of cache-based side channel attacks from untrusted {VMMs} when Intel {TDX} is enabled.},
	titleaddon = {{MKTME} Side Channel Impact on Intel {TDX}},
	author = {{Intel Corporation}},
	urldate = {2023-12-06},
	date = {2023-09-21},
	langid = {english},
}

@online{kirill_a_shutemov_intel_2019,
	title = {Intel {MKTME} enabling [{LWN}.net]},
	url = {https://lwn.net/Articles/795015/},
	author = {{Kirill A. Shutemov}},
	urldate = {2023-12-06},
	date = {2019-07-31},
}

@online{julian_stecklina_intel_2023,
	title = {Intel {TDX} Doesn’t Protect You from the Cloud},
	url = {https://x86.lol/generic/2023/06/28/intel-tdx-2.html},
	abstract = {This post is a continuation of my previous post about Intel {TDX}. It’s worth a read before reading this post. As before, I’m not going to introduce {TDX} itself. If you need a refresher, Intel has good overview material available.},
	titleaddon = {x86.lol},
	author = {{Julian Stecklina}},
	urldate = {2023-12-06},
	date = {2023-06-28},
	langid = {english},
}

@inproceedings{lefeuvre_towards_2023,
	location = {Providence {RI} {USA}},
	title = {Towards (Really) Safe and Fast Confidential I/O},
	isbn = {9798400701955},
	url = {https://dl.acm.org/doi/10.1145/3593856.3595913},
	doi = {10.1145/3593856.3595913},
	eventtitle = {{HOTOS} '23: 19th Workshop on Hot Topics in Operating Systems},
	pages = {214--222},
	booktitle = {Proceedings of the 19th Workshop on Hot Topics in Operating Systems},
	publisher = {{ACM}},
	author = {Lefeuvre, Hugo and Chisnall, David and Kogias, Marios and Olivier, Pierre},
	urldate = {2023-12-06},
	date = {2023-06-22},
	langid = {english},
	file = {Lefeuvre et al_2023_Towards (Really) Safe and Fast Confidential I-O.pdf:C\:\\Users\\jakn\\Zotero\\storage\\N4NESYVM\\Lefeuvre et al_2023_Towards (Really) Safe and Fast Confidential I-O.pdf:application/pdf},
}

@online{elena_reshetova_intel_2023,
	title = {Intel® Trust Domain Extension Guest Linux Kernel Hardening Strategy — Intel® Trust Domain Extension},
	url = {https://intel.github.io/ccc-linux-guest-hardening-docs/tdx-guest-hardening.html},
	author = {{Elena Reshetova} and {Tamas Lengyel} and {Sebastian Osterlund} and {Steffen Schulz}},
	urldate = {2023-12-06},
	date = {2023-10-05},
	file = {Intel® Trust Domain Extension Guest Linux Kernel Hardening Strategy — Intel® Trust Domain Extension:C\:\\Users\\jakn\\Zotero\\storage\\XQIWHCRE\\tdx-guest-hardening.html:text/html},
}

@online{andi_kleen_intel_2023,
	title = {Intel® Trust Domain Extension Linux Guest Kernel Security Specification — Intel® Trust Domain Extension},
	url = {https://intel.github.io/ccc-linux-guest-hardening-docs/security-spec.html},
	author = {{Andi Kleen} and {Elena Reshetova}},
	urldate = {2023-12-06},
	date = {2023-10-05},
	file = {Intel® Trust Domain Extension Linux Guest Kernel Security Specification — Intel® Trust Domain Extension:C\:\\Users\\jakn\\Zotero\\storage\\V7X8PT2K\\security-spec.html:text/html},
}

@inproceedings{Lipp2021Platypus,
  title = {{PLATYPUS: Software-based Power Side-Channel Attacks on x86}},
  author = {Lipp, Moritz and Kogler, Andreas and Oswald, David and Schwarz,
            Michael and Easdon, Catherine and Canella, Claudio and Gruss, Daniel},
  booktitle={2021 IEEE Symposium on Security and Privacy (SP)},
  year = {2021},
  organization={IEEE}
}

@misc{devlin_bert_2019-1,
	title = {{BERT}: Pre-training of Deep Bidirectional Transformers for Language Understanding},
	url = {http://arxiv.org/abs/1810.04805},
	doi = {10.48550/arXiv.1810.04805},
	shorttitle = {{BERT}},
	abstract = {We introduce a new language representation model called {BERT}, which stands for Bidirectional Encoder Representations from Transformers. Unlike recent language representation models, {BERT} is designed to pre-train deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers. As a result, the pre-trained {BERT} model can be fine-tuned with just one additional output layer to create state-of-the-art models for a wide range of tasks, such as question answering and language inference, without substantial task-specific architecture modifications. {BERT} is conceptually simple and empirically powerful. It obtains new state-of-the-art results on eleven natural language processing tasks, including pushing the {GLUE} score to 80.5\% (7.7\% point absolute improvement), {MultiNLI} accuracy to 86.7\% (4.6\% absolute improvement), {SQuAD} v1.1 question answering Test F1 to 93.2 (1.5 point absolute improvement) and {SQuAD} v2.0 Test F1 to 83.1 (5.1 point absolute improvement).},
	number = {{arXiv}:1810.04805},
	publisher = {{arXiv}},
	author = {Devlin, Jacob and Chang, Ming-Wei and Lee, Kenton and Toutanova, Kristina},
	urldate = {2023-12-15},
	date = {2019-05-24},
	eprinttype = {arxiv},
	eprint = {1810.04805 [cs]},
	keywords = {Computer Science - Computation and Language},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\R5HKGNCI\\1810.html:text/html;Devlin et al_2019_BERT.pdf:C\:\\Users\\jakn\\Zotero\\storage\\WGNJUJ6Q\\Devlin et al_2019_BERT.pdf:application/pdf},
}

@misc{sanh_distilbert_2020,
	title = {{DistilBERT}, a distilled version of {BERT}: smaller, faster, cheaper and lighter},
	url = {http://arxiv.org/abs/1910.01108},
	doi = {10.48550/arXiv.1910.01108},
	shorttitle = {{DistilBERT}, a distilled version of {BERT}},
	abstract = {As Transfer Learning from large-scale pre-trained models becomes more prevalent in Natural Language Processing ({NLP}), operating these large models in on-the-edge and/or under constrained computational training or inference budgets remains challenging. In this work, we propose a method to pre-train a smaller general-purpose language representation model, called {DistilBERT}, which can then be fine-tuned with good performances on a wide range of tasks like its larger counterparts. While most prior work investigated the use of distillation for building task-specific models, we leverage knowledge distillation during the pre-training phase and show that it is possible to reduce the size of a {BERT} model by 40\%, while retaining 97\% of its language understanding capabilities and being 60\% faster. To leverage the inductive biases learned by larger models during pre-training, we introduce a triple loss combining language modeling, distillation and cosine-distance losses. Our smaller, faster and lighter model is cheaper to pre-train and we demonstrate its capabilities for on-device computations in a proof-of-concept experiment and a comparative on-device study.},
	number = {{arXiv}:1910.01108},
	publisher = {{arXiv}},
	author = {Sanh, Victor and Debut, Lysandre and Chaumond, Julien and Wolf, Thomas},
	urldate = {2023-12-15},
	date = {2020-02-29},
	eprinttype = {arxiv},
	eprint = {1910.01108 [cs]},
	keywords = {Computer Science - Computation and Language},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\JLKCRZ2B\\1910.html:text/html;Sanh et al_2020_DistilBERT, a distilled version of BERT.pdf:C\:\\Users\\jakn\\Zotero\\storage\\Y4BAL8VL\\Sanh et al_2020_DistilBERT, a distilled version of BERT.pdf:application/pdf},
}

@misc{liu_roberta_2019,
	title = {{RoBERTa}: A Robustly Optimized {BERT} Pretraining Approach},
	url = {http://arxiv.org/abs/1907.11692},
	doi = {10.48550/arXiv.1907.11692},
	shorttitle = {{RoBERTa}},
	abstract = {Language model pretraining has led to significant performance gains but careful comparison between different approaches is challenging. Training is computationally expensive, often done on private datasets of different sizes, and, as we will show, hyperparameter choices have significant impact on the final results. We present a replication study of {BERT} pretraining (Devlin et al., 2019) that carefully measures the impact of many key hyperparameters and training data size. We find that {BERT} was significantly undertrained, and can match or exceed the performance of every model published after it. Our best model achieves state-of-the-art results on {GLUE}, {RACE} and {SQuAD}. These results highlight the importance of previously overlooked design choices, and raise questions about the source of recently reported improvements. We release our models and code.},
	number = {{arXiv}:1907.11692},
	publisher = {{arXiv}},
	author = {Liu, Yinhan and Ott, Myle and Goyal, Naman and Du, Jingfei and Joshi, Mandar and Chen, Danqi and Levy, Omer and Lewis, Mike and Zettlemoyer, Luke and Stoyanov, Veselin},
	urldate = {2023-12-15},
	date = {2019-07-26},
	eprinttype = {arxiv},
	eprint = {1907.11692 [cs]},
	keywords = {Computer Science - Computation and Language},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\MHE5IYPC\\1907.html:text/html;Liu et al_2019_RoBERTa.pdf:C\:\\Users\\jakn\\Zotero\\storage\\MD2FH4N4\\Liu et al_2019_RoBERTa.pdf:application/pdf},
}

@article{fleming_how_1986,
	title = {How not to lie with statistics: the correct way to summarize benchmark results},
	volume = {29},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/5666.5673},
	doi = {10.1145/5666.5673},
	shorttitle = {How not to lie with statistics},
	abstract = {Using the arithmetic mean to summarize normalized benchmark results leads to mistaken conclusions that can be avoided by using the preferred method: the geometric mean.},
	pages = {218--221},
	number = {3},
	journaltitle = {Commun. {ACM}},
	author = {Fleming, Philip J. and Wallace, John J.},
	urldate = {2023-12-20},
	date = {1986-03},
	langid = {english},
	file = {Fleming and Wallace - 1986 - How not to lie with statistics the correct way to.pdf:C\:\\Users\\jakn\\Zotero\\storage\\ALL9R7NM\\Fleming and Wallace - 1986 - How not to lie with statistics the correct way to.pdf:application/pdf},
}

@online{noauthor_release_nodate,
	title = {Release 2023ww22 · intel/tdx-tools},
	url = {https://github.com/intel/tdx-tools/releases/tag/2023ww22},
	abstract = {This is the Linux {TDX} 1.0 reference stack.
News

{TDX} kernel is rebased on latest stable v5.19.17 with latest security updates.
Linux {IMA} (Integrity Measurement Architecture) is extended to support ...},
	titleaddon = {{GitHub}},
	urldate = {2024-01-03},
	langid = {english},
	file = {Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\UUVWJ87N\\2023ww22.html:text/html},
}

@misc{bogdanov_biclique_2011,
	title = {Biclique Cryptanalysis of the Full {AES}},
	url = {https://eprint.iacr.org/2011/449},
	abstract = {Since Rijndael was chosen as the Advanced Encryption Standard, improving upon 7-round attacks on the 128-bit key variant or upon 8-round attacks on the 192/256-bit key variants has been one of the most difficult challenges in the cryptanalysis of block ciphers for more than a decade. In this paper we present a novel technique of block cipher cryptanalysis with bicliques, which leads to the following results:

1) The first key recovery attack on the full {AES}-128 with computational complexity 2126.1.
2) The first key recovery attack on the full {AES}-192 with computational complexity 2{\textasciicircum}189.7.
3) The first key recovery attack on the full {AES}-256 with computational complexity 2{\textasciicircum}254.4.
4) Attacks with lower complexity on the reduced-round versions of {AES} not considered before, including an attack on 8-round {AES}-128 with complexity 2{\textasciicircum}124.9.
5) Preimage attacks on compression functions based on the full {AES} versions.

In contrast to most shortcut attacks on {AES} variants, we do not need to assume any related-keys. Most of our attacks only need a very small part of the codebook and have small memory requirements, and are practically verified to a large extent. As our attacks are of high computational complexity, they do not threaten the practical use of {AES} in any way.},
	number = {2011/449},
	author = {Bogdanov, Andrey and Khovratovich, Dmitry and Rechberger, Christian},
	urldate = {2024-01-15},
	date = {2011},
	note = {Publication info: Published elsewhere. The full version of a paper accepted to {ASIACRYPT}'11},
	keywords = {{AES}, bicliques, block ciphers, key recovery, preimag},
	file = {Bogdanov et al_2011_Biclique Cryptanalysis of the Full AES.pdf:C\:\\Users\\jakn\\Zotero\\storage\\NQ6I3WGM\\Bogdanov et al_2011_Biclique Cryptanalysis of the Full AES.pdf:application/pdf},
}

@misc{bundesamt_fur_sicherheit_in_der_informationstechnik_cryptographic_2023,
	title = {Cryptographic Mechanisms: Recommendations and Key Lengths},
	url = {https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102/BSI-TR-02102-1.pdf?__blob=publicationFile},
	author = {{Bundesamt für Sicherheit in der Informationstechnik}},
	urldate = {2024-01-15},
	date = {2023-01-24},
	file = {BSI-TR-02102-1.pdf:C\:\\Users\\jakn\\Zotero\\storage\\YD72PCN2\\BSI-TR-02102-1.pdf:application/pdf},
}

@inproceedings{wagner_boomerang_1999,
	location = {Berlin, Heidelberg},
	title = {The Boomerang Attack},
	isbn = {978-3-540-48519-3},
	doi = {10.1007/3-540-48519-8_12},
	series = {Lecture Notes in Computer Science},
	abstract = {This paper describes a new differential-style attack, which we call the boomerang attack. This attack has several interesting applications. First, we disprove the oft-repeated claim that eliminating all high-probability differentials for the whole cipher is suffcient to guarantee security against differential attacks. Second, we show how to break {COCONUT}98, a cipher designed using decorrelation techniques to ensure provable security against differential attacks, with an advanced differential-style attack that needs just 216 adaptively chosen texts. Also, to illustrate the power of boomerang techniques, we give new attacks on Khufu-16, {FEAL}-6, and 16 rounds of {CAST}-256.},
	pages = {156--170},
	booktitle = {Fast Software Encryption},
	publisher = {Springer},
	author = {Wagner, David},
	editor = {Knudsen, Lars},
	date = {1999},
	langid = {english},
	keywords = {Block Cipher, Erential Characteristic, Folk Theorem, Provable Security, Success Probability},
	file = {Wagner_1999_The Boomerang Attack.pdf:C\:\\Users\\jakn\\Zotero\\storage\\I3AARFJH\\Wagner_1999_The Boomerang Attack.pdf:application/pdf},
}

@article{intel_corporation_intelr_2022,
	title = {Intel(R) Software Guard Extensions Developer Guide},
	url = {https://download.01.org/intel-sgx/linux-1.7/docs/Intel_SGX_Developer_Guide.pdf},
	author = {{Intel Corporation}},
	date = {2022-11-28},
	langid = {english},
	file = {Intel(R) Software Guard Extensions Developer Guide.pdf:C\:\\Users\\jakn\\Zotero\\storage\\CEK6KRLH\\Intel(R) Software Guard Extensions Developer Guide.pdf:application/pdf},
}

@book{sardar_towards_2020,
	title = {Towards Formalization of Enhanced Privacy {ID} ({EPID})-based Remote Attestation in Intel {SGX}},
	abstract = {Vulnerabilities in privileged software layers have been exploited with severe consequences. Recently, Trusted Execution Environments ({TEEs}) based technologies have emerged as a promising approach since they claim strong confidentiality and integrity guarantees regardless of the trustworthiness of the underlying system software. In this paper, we consider one of the most prominent {TEE} technologies, referred to as Intel Software Guard Extensions ({SGX}). Despite many formal approaches, there is still a lack of formal proof of some critical processes of Intel {SGX}, such as remote attestation. To fill this gap, we propose a fully automated, rigorous, and sound formal approach to specify and verify the Enhanced Privacy {ID} ({EPID})-based remote attestation in Intel {SGX} under the assumption that there are no side-channel attacks and no vulnerabilities inside the enclave. The evaluation indicates that the confidentiality of attestation keys is preserved against a Dolev-Yao adversary in this technology. We also present a few of the many inconsistencies found in the existing literature on Intel {SGX} attestation during formal specification.},
	author = {Sardar, Muhammad and Le, Do and Fetzer, Christof},
	date = {2020-04-10},
	file = {Sardar et al_2020_Towards Formalization of Enhanced Privacy ID (EPID)-based Remote Attestation in.pdf:C\:\\Users\\jakn\\Zotero\\storage\\W443RUAI\\Sardar et al_2020_Towards Formalization of Enhanced Privacy ID (EPID)-based Remote Attestation in.pdf:application/pdf},
}

@book{sardar_formal_2023,
	title = {Formal Specification and Verification of Architecturally-defined Attestation Mechanisms in Arm {CCA} and Intel {TDX}},
	abstract = {Attestation is one of the most critical mechanisms in confidential computing ({CC}). We present a holistic verification approach enabling comprehensive and rigorous security analysis of architecturally-defined attestation mechanisms in {CC}. Specifically, we analyze two prominent next-generation hardware-based Trusted Execution Environments ({TEEs}), namely Arm Confidential Compute Architecture ({CCA}) and Intel Trust Domain Extensions ({TDX}). For both of these solutions, we provide a comprehensive specification of all phases of the attestation mechanism, namely provisioning, initialization, and attestation protocol. We demonstrate that including the initialization phase in the formal model leads to a violation of integrity, freshness, and secrecy properties for Intel's claimed trusted computing base ({TCB}), which could not be captured by considering the attestation protocol alone in the related work. We open-source our artifacts. Other researchers, including a team from Intel, are adopting our artifacts for further analysis.},
	author = {Sardar, Muhammad and Fossati, Thomas and Frost, Simon and Xiong, Shale},
	date = {2023-11-12},
	file = {Sardar et al_2023_Formal Specification and Verification of Architecturally-defined Attestation.pdf:C\:\\Users\\jakn\\Zotero\\storage\\3JP7JII9\\Sardar et al_2023_Formal Specification and Verification of Architecturally-defined Attestation.pdf:application/pdf},
}

@incollection{mauw_understanding_2019,
	location = {Cham},
	title = {Understanding Attestation: Analyzing Protocols that Use Quotes},
	volume = {11738},
	isbn = {978-3-030-31510-8 978-3-030-31511-5},
	url = {http://link.springer.com/10.1007/978-3-030-31511-5_6},
	shorttitle = {Understanding Attestation},
	abstract = {Attestation protocols use digital signatures and other cryptographic values to convey evidence of hardware state, program code, and associated keys. They require hardware support such as Trusted Execution Environments. Conclusions about attestations thus depend jointly on protocols, hardware services, and program behavior.},
	pages = {89--106},
	booktitle = {Security and Trust Management},
	publisher = {Springer International Publishing},
	author = {Guttman, Joshua D. and Ramsdell, John D.},
	editor = {Mauw, Sjouke and Conti, Mauro},
	urldate = {2024-01-30},
	date = {2019},
	langid = {english},
	doi = {10.1007/978-3-030-31511-5_6},
	note = {Series Title: Lecture Notes in Computer Science},
	file = {Guttman and Ramsdell - 2019 - Understanding Attestation Analyzing Protocols tha.pdf:C\:\\Users\\jakn\\Zotero\\storage\\LAGINDVR\\Guttman and Ramsdell - 2019 - Understanding Attestation Analyzing Protocols tha.pdf:application/pdf},
}

@article{patel_software_2014,
	title = {Software Performance Testing Measures},
	volume = {8},
	doi = {10.24297/ijmit.v8i2.681},
	abstract = {Software developers typically measure a Web application's quality of service in terms of webpage availability, response time, and throughput. Performance testing and evaluation of software components becomes a critical task. Poor quality of software performance can lead to bad opportunities. Few research papers address the issues and systematic solutions to performance testing and measurement for modern components of software. This paper proposes a solution and environment to support performance measurement for software. The objective is to provide all kind of important measures which must be tested at the coding phase instead of after completion of software. So developers can make software that can meet performance objectives.},
	pages = {1297--1300},
	journaltitle = {{INTERNATIONAL} {JOURNAL} {OF} {MANAGEMENT} \& {INFORMATION} {TECHNOLOGY}},
	author = {Patel, Charmy and Gulati, Ravi},
	date = {2014-01-31},
}

@article{johnson_elliptic_2001,
	title = {The Elliptic Curve Digital Signature Algorithm ({ECDSA})},
	volume = {1},
	issn = {1615-5262},
	url = {https://doi.org/10.1007/s102070100002},
	doi = {10.1007/s102070100002},
	abstract = {The Elliptic Curve Digital Signature Algorithm ({ECDSA}) is the elliptic curve analogue of the Digital Signature Algorithm ({DSA}). It was accepted in 1999 as an {ANSI} standard and in 2000 as {IEEE} and {NIST} standards. It was also accepted in 1998 as an {ISO} standard and is under consideration for inclusion in some other {ISO} standards. Unlike the ordinary discrete logarithm problem and the integer factorization problem, no subexponential-time algorithm is known for the elliptic curve discrete logarithm problem. For this reason, the strength-per-key-bit is substantially greater in an algorithm that uses elliptic curves. This paper describes the {ANSI} X9.62 {ECDSA}, and discusses related security, implementation, and interoperability issues.},
	pages = {36--63},
	number = {1},
	journaltitle = {{IJIS}},
	author = {Johnson, Don and Menezes, Alfred and Vanstone, Scott},
	urldate = {2024-02-04},
	date = {2001-08-01},
	langid = {english},
	keywords = {Key words: Signature schemes – Elliptic curve cryptography – {DSA} – {ECDSA}},
}

@misc{bellare_new_2006,
	title = {New Proofs for {NMAC} and {HMAC}: Security Without Collision-Resistance},
	url = {https://eprint.iacr.org/2006/043},
	shorttitle = {New Proofs for {NMAC} and {HMAC}},
	abstract = {{HMAC} was proved by Bellare, Canetti and Krawczyk [2] to be a {PRF} assuming that (1)
the underlying compression function is a {PRF}, and (2) the iterated hash
function is weakly collision-resistant.
However, recent attacks show that assumption (2) is false for
{MD}5 and {SHA}-1,
removing the proof-based support for {HMAC} in these cases.
This paper proves that {HMAC} is a {PRF}
under the sole assumption that the compression function is a {PRF}. This recovers
a proof based guarantee since no known attacks compromise the pseudorandomness
of the compression function, and it also helps explain the resistance-to-attack
that {HMAC} has shown even when implemented with hash functions whose
(weak) collision resistance is compromised. We also show that an even
weaker-than-{PRF} condition on the compression function, namely that it is a
privacy-preserving {MAC}, suffices to establish {HMAC} is a {MAC} as long as the hash
function meets the very weak requirement of being computationally almost
universal, where again the value lies in the fact that known attacks do not
invalidate the assumptions made.},
	number = {2006/043},
	author = {Bellare, Mihir},
	urldate = {2024-02-04},
	date = {2006},
	note = {Publication info: A major revision of an {IACR} publication in {CRYPTO} 2006},
	keywords = {{HMAC}, message authentication, {PRF}, security proof},
	file = {Bellare_2006_New Proofs for NMAC and HMAC.pdf:C\:\\Users\\jakn\\Zotero\\storage\\HF2S8XT8\\Bellare_2006_New Proofs for NMAC and HMAC.pdf:application/pdf},
}

@misc{knauth_integrating_2019,
	title = {Integrating Remote Attestation with Transport Layer Security},
	url = {http://arxiv.org/abs/1801.05863},
	doi = {10.48550/arXiv.1801.05863},
	abstract = {Intel(R) Software Guard Extensions (Intel(R) {SGX}) is a promising technology to securely process information in otherwise untrusted environments. An important aspect of Intel {SGX} is the ability to perform remote attestation to assess the endpoint's trustworthiness. Ultimately, remote attestation will result in an attested secure channel to provision secrets to the enclave. We seamlessly combine Intel {SGX} remote attestation with the establishment of a standard Transport Layer Security ({TLS}) connection. Remote attestation is performed during the connection setup. To achieve this, we neither change the {TLS} protocol, nor do we modify existing protocol implementations. We have prototype implementations for three widely used open-source {TLS} libraries: {OpenSSL}, {wolfSSL} and {mbedTLS}. We describe the requirements, design and implementation details to seamlessly bind attested {TLS} endpoints to Intel {SGX} enclaves.},
	number = {{arXiv}:1801.05863},
	publisher = {{arXiv}},
	author = {Knauth, Thomas and Steiner, Michael and Chakrabarti, Somnath and Lei, Li and Xing, Cedric and Vij, Mona},
	urldate = {2024-02-05},
	date = {2019-07-26},
	eprinttype = {arxiv},
	eprint = {1801.05863 [cs]},
	keywords = {Computer Science - Cryptography and Security},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\HQ9MTRLV\\1801.html:text/html;Knauth et al_2019_Integrating Remote Attestation with Transport Layer Security.pdf:C\:\\Users\\jakn\\Zotero\\storage\\2R9DQB4Y\\Knauth et al_2019_Integrating Remote Attestation with Transport Layer Security.pdf:application/pdf},
}

@article{zhu_understanding_nodate,
	title = {Understanding The Security of Discrete {GPUs}},
	doi = {10.1145/3038228.3038233},
	abstract = {{GPUs} have become an integral part of modern systems, but their implications for system security are not yet clear. This paper demonstrates both that discrete {GPUs} cannot be used as secure co-processors and that {GPUs} provide a stealthy platform for malware. First, we examine a recent proposal to use discrete {GPUs} as secure co-processors and show that the security guarantees of the proposed system do not hold on the {GPUs} we investigate. Second, we demonstrate that (under certain circumstances) it is possible to bypass {IOMMU} protections and create stealthy, long-lived {GPU}-based malware. We demonstrate a novel attack that compromises the in-kernel {GPU} driver and one that compromises {GPU} microcode to gain full access to {CPU} physical memory. In general, we ﬁnd that the highly sophisticated, but poorly documented {GPU} hardware architecture, hidden behind obscure close-source device drivers and vendor-speciﬁc {APIs}, not only make {GPUs} a poor choice for applications requiring strong security, but also make {GPUs} into a security threat.},
	author = {Zhu, Zhiting and Hu, Yige and Kim, Sangman and Witchel, Emmett and Rozhanski, Yuri and Silberstein, Mark},
	langid = {english},
	file = {Zhu et al. - Understanding The Security of Discrete GPUs.pdf:C\:\\Users\\jakn\\Zotero\\storage\\B794ASIE\\Zhu et al. - Understanding The Security of Discrete GPUs.pdf:application/pdf},
}

@article{ogburn_homomorphic_2013,
	title = {Homomorphic Encryption},
	volume = {20},
	issn = {1877-0509},
	url = {https://www.sciencedirect.com/science/article/pii/S1877050913011101},
	doi = {10.1016/j.procs.2013.09.310},
	series = {Complex Adaptive Systems},
	abstract = {The study of homomorphic encryption techniques has led to significant advancements in the computing domain, particularly in the sphere of cloud computing. Homomorphic encryption provides a means for securely transmitting and storing confidential information across and in a computer system. The aim of this paper is to discuss the concepts and significance of homomorphic encryption along with the subdivisions and limitations associated with this type of encryption scheme. Recent studies conducted on the topic of homomorphic encryption are highlighted and some customary models of homomorphism are demonstrated. We also developed a proof of concept algorithm that demonstrates a practical use for a homomorphic encryption technique, the results of our algorithm are provided. The applications of homomorphic encryption methods are vast outside of the computational realm, and its purpose in other fields will be explored.},
	pages = {502--509},
	journaltitle = {Procedia Computer Science},
	author = {Ogburn, Monique and Turner, Claude and Dahal, Pushkar},
	urldate = {2024-02-12},
	date = {2013-01-01},
	keywords = {ciphertext, decrypt, encrypt, fully homomorphic encryption, partially homomorphic encryption},
	file = {ScienceDirect Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\GBXADWEK\\S1877050913011101.html:text/html},
}

@misc{li_security_2020,
	title = {On the Security of Homomorphic Encryption on Approximate Numbers},
	url = {https://eprint.iacr.org/2020/1533},
	abstract = {We present passive attacks against {CKKS}, the homomorphic encryption
scheme for arithmetic on approximate numbers presented at
Asiacrypt 2017. The attack is both theoretically efficient
(running in expected polynomial time)
and very practical, leading to complete key recovery with high probability
and very modest running times.
We implemented and tested the attack against major open source
homomorphic encryption libraries, including {HEAAN}, {SEAL}, {HElib} and
{PALISADE}, and when computing several functions that often arise in applications of the
{CKKS} scheme to machine learning on encrypted data, like mean and variance computations, and
approximation of logistic and exponential functions using their Maclaurin series.

The attack shows that the traditional formulation of {IND}-{CPA} security
(or indistinguishability against chosen plaintext attacks)
achieved by {CKKS} does not adequately capture security against passive
adversaries when applied to approximate encryption schemes,
and that a different, stronger definition is required to evaluate
the security of such schemes.

We provide a solid theoretical basis for the security evaluation of homomorphic
encryption on approximate numbers (against passive attacks)
by proposing new definitions, that
naturally extend the traditional notion of {INDCPA} security to the approximate
computation setting.
We propose both indistinguishability-based and simulation-based variants,
as well as restricted versions of the definitions that limit the order and number
of adversarial queries (as may be enforced by some applications).
We prove implications and separations among different definitional variants,
and discuss possible modifications to {CKKS} that may serve as a countermeasure to our
attacks.},
	number = {2020/1533},
	author = {Li, Baiyu and Micciancio, Daniele},
	urldate = {2024-02-12},
	date = {2020},
	note = {Publication info: A minor revision of an {IACR} publication in {EUROCRYPT} 2021},
	keywords = {approximate encryption, homomorphic encryption, passive security},
	file = {Li_Micciancio_2020_On the Security of Homomorphic Encryption on Approximate Numbers.pdf:C\:\\Users\\jakn\\Zotero\\storage\\47ZVIP7N\\Li_Micciancio_2020_On the Security of Homomorphic Encryption on Approximate Numbers.pdf:application/pdf},
}

@online{sog-is_crypto_working_group_sog-is_2023,
	title = {{SOG}-{IS} Crypto Evaluation Scheme Agreed Cryptographic Mechanisms},
	url = {https://www.sogis.eu/documents/cc/crypto/SOGIS-Agreed-Cryptographic-Mechanisms-1.3.pdf},
	author = {{SOG-IS Crypto Working Group}},
	urldate = {2024-02-05},
	date = {2023-05-24},
	file = {SOGIS-Agreed-Cryptographic-Mechanisms-1.3.pdf:C\:\\Users\\jakn\\Zotero\\storage\\CRQRXHK6\\SOGIS-Agreed-Cryptographic-Mechanisms-1.3.pdf:application/pdf},
}

@article{jain_security_nodate,
	title = {Security Analysis of Remote Attestation},
	author = {Jain, Lavina and Vyas, Jayesh},
	langid = {english},
	keywords = {⛔ No {DOI} found},
	file = {Jain and Vyas - Security Analysis of Remote Attestation.pdf:C\:\\Users\\jakn\\Zotero\\storage\\SV5AHYDI\\Jain and Vyas - Security Analysis of Remote Attestation.pdf:application/pdf},
}

@inproceedings{wagner_towards_2022,
	title = {Towards Heterogeneous Remote Attestation Protocols},
	isbn = {978-989-758-590-6},
	url = {https://publikationen.bibliothek.kit.edu/1000149768},
	doi = {10.5220/0011289000003283},
	abstract = {Remote attestation protocols are valuable tools to cryptographically verify the integrity of remote software stacks. Usually these protocols rely on a specific hardware-based trusted computing technology to provide their security guarantees. However, especially in distributed settings with many collaborating platforms it is not always feasible to use protocols developed exclusively for one trusted computing technology. In this work we explore the possibility of conducting heterogeneous remote attestations between endpoints utilizing different trusted computing technologies. We motivate the benefits of such attestations in the light of distributed systems and present a list of requirements for a working heterogeneous remote attestation protocol. Then we propose a remote attestation mechanism that can securely link Intel {SGX} enclaves, {TPM}-based trusted applications, as well as {ARM} {TrustZone} devices with an attested and encrypted communication channel. Finally we outline how this mechan ism can be integrated into an established remote attestation protocol.},
	eventtitle = {19th International Conference on Security and Cryptography ({SECRYPT} 2022), Lissabon, Portugal, 11.07.2013 – 13.07.2022},
	pages = {586},
	booktitle = {Proceedings of the 19th International Conference on Security and Cryptography - {SECRYPT}. Vol. 1. Ed.: S. De Capitani di Vimercati},
	author = {Wagner, Paul Georg and Beyerer, Jürgen},
	urldate = {2024-02-14},
	date = {2022},
	langid = {german},
	file = {Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\4G9BSWQ9\\1000149768.html:text/html},
}

@article{van_schaik_sok_nodate,
	title = {{SoK}: {SGX}.Fail: How Stuff Gets {eXposed}},
	abstract = {Intel’s Software Guard Extensions ({SGX}) promises an isolated execution environment, protected from all software running on the machine. As such, numerous works have sought to leverage {SGX} to provide conﬁdentiality and integrity guarantees for code running in adversarial environments. In the past few years however, {SGX} has come under heavy ﬁre, threatened by numerous hardware attacks. With Intel repeatedly patching {SGX} to regain security while consistently launching new (micro)architectures, it is increasingly difﬁcult to track the applicability of various attacks techniques across the {SGX} design landscape.},
	author = {van Schaik, Stephan and Seto, Alex and Yurek, Thomas and Batori, Adam and {AlBassam}, Bader and Garman, Christina and Genkin, Daniel and Miller, Andrew and Ronen, Eyal and Yarom, Yuval},
	langid = {english},
	keywords = {⛔ No {DOI} found},
	file = {van Schaik et al. - SoK SGX.Fail How Stuff Gets eXposed.pdf:C\:\\Users\\jakn\\Zotero\\storage\\7NS76L98\\van Schaik et al. - SoK SGX.Fail How Stuff Gets eXposed.pdf:application/pdf},
}

@article{dworkin_advanced_2001,
	title = {Advanced Encryption Standard ({AES})},
	url = {https://www.nist.gov/publications/advanced-encryption-standard-aes},
	abstract = {The Advanced Encryption Standard ({AES}) specifies a {FIPS}-approved cryptographic algorithm that can be used to protect electronic data.},
	journaltitle = {{NIST}},
	author = {Dworkin, Morris J. and Barker, Elaine B. and Nechvatal, James R. and Foti, James and Bassham, Lawrence E. and Roback, E. and Jr, James F. Dray},
	urldate = {2024-02-15},
	date = {2001-11-26},
	langid = {english},
	note = {Last Modified: 2021-03-01T01:03-05:00
Publisher: Morris J. Dworkin, Elaine B. Barker, James R. Nechvatal, James Foti, Lawrence E. Bassham, E. Roback, James F. Dray Jr.},
	keywords = {⛔ No {DOI} found},
	file = {Dworkin et al_2001_Advanced Encryption Standard (AES).pdf:C\:\\Users\\jakn\\Zotero\\storage\\MGWDJA5B\\Dworkin et al_2001_Advanced Encryption Standard (AES).pdf:application/pdf},
}

@misc{intel_corporation_intel-tdx-module-15-abi-spec-348551001pdf_2024,
	title = {intel tdx-module 1.5 abi spec},
	url = {https://www.intel.com/content/www/us/en/content-details/733579/intel-tdx-module-v1-5-abi-specification.html},
	author = {{Intel Corporation}},
	urldate = {2024-02-15},
	date = {2024-02-10},
	file = {intel-tdx-module-1.5-abi-spec-348551001.pdf:C\:\\Users\\jakn\\Zotero\\storage\\MJWU5URM\\intel-tdx-module-1.5-abi-spec-348551001.pdf:application/pdf},
}

@misc{noauthor_jung_nodate,
	title = {Jung - {SECURITY}, {SOFTWARE}, {RISK}-{BASED} {VARIANTS}.pdf},
	file = {Jung - SECURITY, SOFTWARE, RISK-BASED VARIANTS.pdf:C\:\\Users\\jakn\\Zotero\\storage\\3H2MUX9X\\Jung - SECURITY, SOFTWARE, RISK-BASED VARIANTS.pdf:application/pdf},
}

@thesis{luca_wilke_injection_2020,
	title = {Injection Attacks on Secure Encrypted Virtualization},
	url = {https://www.its.uni-luebeck.de/fileadmin/files/theses/MA_LucaWilke_InjectionAttacksOnSEV.pdf},
	type = {phdthesis},
	author = {{Luca Wilke}},
	urldate = {2023-12-06},
	date = {2020-08-30},
	file = {MA_LucaWilke_InjectionAttacksOnSEV.pdf:C\:\\Users\\jakn\\Zotero\\storage\\VFQ6ZQQH\\MA_LucaWilke_InjectionAttacksOnSEV.pdf:application/pdf},
}

@online{intel_corporation_dcap_2024-1,
	title = {Intel {TDX} {DCAP} Quoting Library {API}},
	url = {https://download.01.org/intel-sgx/latest/dcap-latest/linux/docs/Intel_TDX_DCAP_Quoting_Library_API.pdf},
	author = {{Intel Corporation}},
	urldate = {2023-11-13},
	date = {2024-01-17},
	file = {Intel_TDX_DCAP_Quoting_Library_API.pdf:C\:\\Users\\jakn\\Zotero\\storage\\82JPLW5G\\Intel_TDX_DCAP_Quoting_Library_API.pdf:application/pdf},
}

@inproceedings{sgxfail,
    title={{SoK}: {SGX.Fail}: How Stuff Get e{X}posed},
    author={van Schaik, Stephan and Seto, Alex and Yurek, Thomas and Batori, Adam and AlBassam, Bader and Garman, Christina and Genkin, Daniel and Miller, Andrew and Ronen, Eyal and Yarom, Yuval},
    howpublished={\url{https://sgx.fail}},
    year={2022},
}

@online{morris_dworkin_recommendation_2015,
	title = {Recommendation for Block Cipher Modes of Operation: The {XTS}-{AES} Mode for Confidentiality on Storage Devices},
	url = {https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-38e.pdf},
	author = {{Morris Dworkin}},
	urldate = {2024-01-15},
	date = {2015-11-18},
	file = {nistspecialpublication800-38e.pdf:C\:\\Users\\jakn\\Zotero\\storage\\E7D7YWPD\\nistspecialpublication800-38e.pdf:application/pdf},
}

@online{intel_corporation_overview--intel-sgx-enclave_nodate,
	title = {overview-of-intel-sgx-enclave},
	url = {https://www.intel.com/content/dam/develop/external/us/en/documents/overview-of-intel-sgx-enclave-637284.pdf},
	author = {{Intel Corporation}},
	urldate = {2024-02-15},
	file = {overview-of-intel-sgx-enclave-637284.pdf:C\:\\Users\\jakn\\Zotero\\storage\\5TG6L6SR\\overview-of-intel-sgx-enclave-637284.pdf:application/pdf},
}

@software{graeber_mattifestationtcglogtools_2023,
	title = {mattifestation/{TCGLogTools}},
	rights = {{BSD}-3-Clause},
	url = {https://github.com/mattifestation/TCGLogTools},
	abstract = {A set of tools to retrieve and parse {TCG} measured boot logs. Microsoft refers to these as Windows Boot Confirguration Logs ({WBCL}). In order to retrieve these logs, you must be running at least Windows 8 with the {TPM} enabled.},
	author = {Graeber, Matt},
	urldate = {2024-03-03},
	date = {2023-12-24},
	note = {original-date: 2018-06-17T02:53:32Z},
}

@article{munoz_survey_2023,
	title = {A survey on the (in)security of trusted execution environments},
	volume = {129},
	issn = {0167-4048},
	url = {https://www.sciencedirect.com/science/article/pii/S0167404823000901},
	doi = {10.1016/j.cose.2023.103180},
	abstract = {As the number of security and privacy attacks continue to grow around the world, there is an ever increasing need to protect our personal devices. As a matter of fact, more and more manufactures are relying on Trusted Execution Environments ({TEEs}) to shield their devices. In particular, {ARM} {TrustZone} ({TZ}) is being widely used in numerous embedded devices, especially smartphones, and this technology is the basis for secure solutions both in industry and academia. However, as shown in this paper, {TEE} is not bullet-proof and it has been successfully attacked numerous times and in very different ways. To raise awareness among potential stakeholders interested in this technology, this paper provides an extensive analysis and categorization of existing vulnerabilities in {TEEs} and highlights the design flaws that led to them. The presented vulnerabilities, which are not only extracted from existing literature but also from publicly available exploits and databases, are accompanied by some effective countermeasures to reduce the likelihood of new attacks. The paper ends with some appealing challenges and open issues.},
	pages = {103180},
	journaltitle = {Computers \& Security},
	author = {Muñoz, Antonio and Ríos, Ruben and Román, Rodrigo and López, Javier},
	urldate = {2024-03-04},
	date = {2023-06-01},
	keywords = {Computer security, Hardware attacks, Secure hardware, Side-channel attacks, Software attacks, Trusted execution environments},
	file = {Muñoz et al_2023_A survey on the (in)security of trusted execution environments.pdf:C\:\\Users\\jakn\\Zotero\\storage\\2R88W33S\\Muñoz et al_2023_A survey on the (in)security of trusted execution environments.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\T56T3E4I\\S0167404823000901.html:text/html},
}

@misc{lipp_nethammer_2018,
	title = {Nethammer: Inducing Rowhammer Faults through Network Requests},
	url = {http://arxiv.org/abs/1805.04956},
	shorttitle = {Nethammer},
	abstract = {A fundamental assumption in software security is that memory contents do not change unless there is a legitimate deliberate modification. Classical fault attacks show that this assumption does not hold if the attacker has physical access. Rowhammer attacks showed that local code execution is already sufficient to break this assumption. Rowhammer exploits parasitic effects in {DRAM} to modify the content of a memory cell without accessing it. Instead, other memory locations are accessed at a high frequency. All Rowhammer attacks so far were local attacks, running either in a scripted language or native code. In this paper, we present Nethammer. Nethammer is the first truly remote Rowhammer attack, without a single attacker-controlled line of code on the targeted system. Systems that use uncached memory or flush instructions while handling network requests, e.g., for interaction with the network device, can be attacked using Nethammer. Other systems can still be attacked if they are protected with quality-of-service techniques like Intel {CAT}. We demonstrate that the frequency of the cache misses is in all three cases high enough to induce bit flips. We evaluated different bit flip scenarios. Depending on the location, the bit flip compromises either the security and integrity of the system and the data of its users, or it can leave persistent damage on the system, i.e., persistent denial of service. We investigated Nethammer on personal computers, servers, and mobile phones. Nethammer is a security landslide, making the formerly local attack a remote attack.},
	number = {{arXiv}:1805.04956},
	publisher = {{arXiv}},
	author = {Lipp, Moritz and Aga, Misiker Tadesse and Schwarz, Michael and Gruss, Daniel and Maurice, Clémentine and Raab, Lukas and Lamster, Lukas},
	urldate = {2024-03-04},
	date = {2018-05-13},
	eprinttype = {arxiv},
	eprint = {1805.04956 [cs]},
	keywords = {Computer Science - Cryptography and Security},
	file = {arXiv.org Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\HHU2N5SJ\\1805.html:text/html;Lipp et al_2018_Nethammer.pdf:C\:\\Users\\jakn\\Zotero\\storage\\HDJU944B\\Lipp et al_2018_Nethammer.pdf:application/pdf},
}


@article{gorard_revisiting_2005,
	title = {Revisiting a 90-Year-Old Debate: The Advantages of the Mean Deviation},
	volume = {53},
	issn = {1467-8527},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8527.2005.00304.x},
	doi = {10.1111/j.1467-8527.2005.00304.x},
	shorttitle = {Revisiting a 90-Year-Old Debate},
	abstract = {{ABSTRACT}: This paper discusses the reliance of numerical analysis on the concept of the standard deviation, and its close relative the variance. It suggests that the original reasons why the standard deviation concept has permeated traditional statistics are no longer clearly valid, if they ever were. The absolute mean deviation, it is argued here, has many advantages over the standard deviation. It is more efficient as an estimate of a population parameter in the real-life situation where the data contain tiny errors, or do not form a completely perfect normal distribution. It is easier to use, and more tolerant of extreme values, in the majority of real-life situations where population parameters are not required. It is easier for new researchers to learn about and understand, and also closely linked to a number of arithmetic techniques already used in the sociology of education and elsewhere. We could continue to use the standard deviation instead, as we do presently, because so much of the rest of traditional statistics is based upon it (effect sizes, and the F-test, for example). However, we should weigh the convenience of this solution for some against the possibility of creating a much simpler and more widespread form of numeric analysis for many.},
	pages = {417--430},
	number = {4},
	journaltitle = {British Journal of Educational Studies},
	author = {Gorard, Stephen},
	urldate = {2024-02-19},
	date = {2005},
	langid = {english},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8527.2005.00304.x},
	keywords = {mean deviation, measuring variation, political arithmetic, social construction of statistics, standard deviation, variance},
}


@online{Marlon_Brando,
	title = {A quote by Marlon Brando},
	url = {https://www.goodreads.com/quotes/433493-privacy-is-not-something-that-i-m-merely-entitled-to-it-s},
	abstract = {Privacy is not something that I'm merely entitled to, it's an absolute prerequisite.},
	author = {{Goodreads}},
	urldate = {2024-03-07},
}


@article{mccalpin_memory_1995,
	title = {Memory bandwidth and machine balance in current high performance computers},
	volume = {2},
	url = {https://www.cs.virginia.edu/~mccalpin/papers/bandwidth/bandwidth.html},
	number = {19},
	journaltitle = {{IEEE} computer society technical committee on computer architecture ({TCCA}) newsletter},
	author = {{McCalpin}, John D.},
	urldate = {2024-03-05},
	date = {1995},
	keywords = {⛔ No {DOI} found},
	file = {McCalpin_1995_Memory bandwidth and machine balance in current high performance computers.pdf:C\:\\Users\\jakn\\Zotero\\storage\\TIDBVY2A\\McCalpin_1995_Memory bandwidth and machine balance in current high performance computers.pdf:application/pdf},
}


@paper{tang_clkscrew_nodate,
	title = {{CLKSCREW}: Exposing the Perils of Security-Oblivious Energy Management},
	abstract = {The need for power- and energy-efﬁcient computing has resulted in aggressive cooperative hardware-software energy management mechanisms on modern commodity devices. Most systems today, for example, allow software to control the frequency and voltage of the underlying hardware at a very ﬁne granularity to extend battery life. Despite their beneﬁts, these software-exposed energy management mechanisms pose grave security implications that have not been studied before.},
	author = {Tang, Adrian and Sethumadhavan, Simha and Stolfo, Salvatore},
	langid = {english},
	keywords = {⛔ No {DOI} found},
	file = {Tang et al. - CLKSCREW Exposing the Perils of Security-Obliviou.pdf:C\:\\Users\\jakn\\Zotero\\storage\\FQ7UVYEB\\Tang et al. - CLKSCREW Exposing the Perils of Security-Obliviou.pdf:application/pdf},
}

@online{security_advisories,
	title = {Intel {TDX} Security Advisories},
	url = {https://github.com/intel/tdx-linux/security/advisories},
	author = {{Intel Corporation}},
}


@online{j_christopher_bare_attestatopn_2006,
	title = {Attestatopn and Trusted Computing},
	url = {https://courses.cs.washington.edu/courses/csep590/06wi/finalprojects/bare.pdf},
	abstract = {A look at the cryptographic techniques and protocols used in trusted computing with particular
attention to remote attestation},
	author = {{J. Christopher Bare}},
	urldate = {2024-02-14},
	date = {2006-03-07},
	file = {bare.pdf:C\:\\Users\\jakn\\Zotero\\storage\\I5T399GV\\bare.pdf:application/pdf},
}

@online{intel_corporation_VT_intel_nodate,
	title = {Intel Virtualization Technologies Help Protect Endpoint Applications \& Data without Impacting the User Experience},
	url = {https://www.intel.com/content/dam/www/central-libraries/us/en/documents/intel-virtualization-technologies-white-paper.pdf},
	author = {{Intel Corporation}},
	urldate = {2024-02-15},
	file = {intel-virtualization-technologies-white-paper.pdf:C\:\\Users\\jakn\\Zotero\\storage\\QZAJD49E\\intel-virtualization-technologies-white-paper.pdf:application/pdf},
}


@article{sardar_formal_spec_ARM_2024,
	title = {Formal Specification and Verification of Architecturally-Defined Attestation Mechanisms in Arm {CCA} and Intel {TDX}},
	volume = {12},
	issn = {2169-3536},
	url = {https://ieeexplore.ieee.org/document/10373038},
	doi = {10.1109/ACCESS.2023.3346501},
	abstract = {Attestation is one of the most critical mechanisms in confidential computing ({CC}). We present a holistic verification approach enabling comprehensive and rigorous security analysis of architecturally-defined attestation mechanisms in {CC}. Specifically, we analyze two prominent next-generation hardware-based Trusted Execution Environments ({TEEs}), namely Arm Confidential Compute Architecture ({CCA}) and Intel Trust Domain Extensions ({TDX}). For both of these solutions, we provide a comprehensive specification of all phases of the attestation mechanism, namely provisioning, initialization, and attestation protocol. We demonstrate that including the initialization phase in the formal model leads to a violation of integrity, freshness, and secrecy properties for Intel’s claimed trusted computing base ({TCB}), which could not be captured by considering the attestation protocol alone in the related work. We open-source our artifacts. Other researchers, including a team from Intel, are adopting our artifacts for further analysis.},
	pages = {361--381},
	journaltitle = {{IEEE} Access},
	author = {Sardar, Muhammad Usama and Fossati, Thomas and Frost, Simon and Xiong, Shale},
	urldate = {2024-02-22},
	date = {2024},
	note = {Conference Name: {IEEE} Access},
	keywords = {Appraisal, Arm confidential compute architecture ({CCA}), Computer architecture, confidential computing, formal specification, Formal specifications, intel trust domain extensions ({TDX}), Protocols, remote attestation, Security, Software engineering, Threat modeling, Trusted computing, trusted execution environment},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\jakn\\Zotero\\storage\\6MI69VIS\\10373038.html:text/html;Sardar et al_2024_Formal Specification and Verification of Architecturally-Defined Attestation.pdf:C\:\\Users\\jakn\\Zotero\\storage\\XKCLGJIU\\Sardar et al_2024_Formal Specification and Verification of Architecturally-Defined Attestation.pdf:application/pdf},
}

@article{luo_container-ima_nodate,
	title = {Container-{IMA}: A privacy-preserving Integrity Measurement Architecture for Containers},
	abstract = {Container-based virtualization has been widely utilized and brought unprecedented inﬂuence on traditional {IT} architecture. How to build trust for containers has become an important security issue as well. Despite the fact that substantial efforts have been made to solve this issue, there are still some challenges to be handled, i.e. how to prevent from exposing information of the underlying host and other users’ containers to a remote veriﬁer, how to measure the integrity status of a designated container along with its reliant services in the underlying host and generate a hardware-based integrity evidence. None of the current solutions can counter these challenges and guarantee efﬁciency simultaneously.},
	author = {Luo, Wu and Shen, Qingni and Xia, Yutang and Wu, Zhonghai},
	langid = {english},
	keywords = {⛔ No {DOI} found},
	file = {Luo et al. - Container-IMA A privacy-preserving Integrity Meas.pdf:C\:\\Users\\jakn\\Zotero\\storage\\JD93P7BF\\Luo et al. - Container-IMA A privacy-preserving Integrity Meas.pdf:application/pdf},
}

@misc{trusted_computing_group_tcg_2023,
	title = {{TCG} Guidance on Integrity Measurements and Event Log Processing},
	url = {https://trustedcomputinggroup.org/wp-content/uploads/TCG-Guidance-Integrity-Measurements-Event-Log-Processing_v1_r0p118_24feb2022-1.pdf},
	author = {{Trusted Computing Group}},
	date = {2023-05-01},
	langid = {english},
	file = {TCG Guidance on Integrity Measurements and Event L.pdf:C\:\\Users\\jakn\\Zotero\\storage\\IWENH3AM\\TCG Guidance on Integrity Measurements and Event L.pdf:application/pdf},
}

@misc{khati_full_disk_encrypt_2016,
	title = {Full Disk Encryption: Bridging Theory and Practice},
	url = {https://eprint.iacr.org/2016/1114},
	shorttitle = {Full Disk Encryption},
	abstract = {We revisit the problem of Full Disk Encryption ({FDE}), which refers to the encryption of each sector of a disk volume. In the context of {FDE}, it is assumed that there is no space to store additional data, such as an {IV} (Initialization Vector) or a {MAC} (Message Authentication Code) value. We formally define the security notions in this model against chosen-plaintext and chosen-ciphertext attacks. Then, we classify various {FDE} modes of operation according to their security in this setting, in the presence of various restrictions on the queries of the adversary. We will find that our approach leads to new insights for both theory and practice. Moreover, we introduce the notion of a diversifier, which does not require additional storage, but allows the plaintext of a particular sector to be encrypted to different ciphertexts. We show how a 2-bit diversifier can be implemented in the {EagleTree} simulator for solid state drives ({SSDs}), while decreasing the total number of Input/Output Operations Per Second ({IOPS}) by only 4\%.},
	number = {2016/1114},
	author = {Khati, Louiza and Mouha, Nicky and Vergnaud, Damien},
	urldate = {2024-02-22},
	date = {2016},
	note = {Publication info: Published elsewhere. Major revision. {CT}-{RSA} 2017: Topics in Cryptology -- {CT}-{RSA} 2017},
	keywords = {disk encryption theory, diversifier, {FDE}, full disk encryption, {IEEE} P1619, provable security, unique first block, {XTS}},
	file = {Khati et al_2016_Full Disk Encryption.pdf:C\:\\Users\\jakn\\Zotero\\storage\\VBJJZPX7\\Khati et al_2016_Full Disk Encryption.pdf:application/pdf},
}

@inproceedings{song_tz-ima_arm_2022,
	location = {Berlin, Heidelberg},
	title = {{TZ}-{IMA}: Supporting Integrity Measurement for Applications with {ARM} {TrustZone}},
	isbn = {978-3-031-15776-9},
	url = {https://doi.org/10.1007/978-3-031-15777-6_19},
	doi = {10.1007/978-3-031-15777-6_19},
	shorttitle = {{TZ}-{IMA}},
	abstract = {With the development of cloud computing and distributed systems, the computer system becomes increasingly complicated and open. To protect the integrity of applications, Integrity Measurement Architecture ({IMA}) is applied in the Linux kernel. However, traditional operating systems are complex and may contain many potential vulnerabilities. If the sensitive data used in {IMA} is leaked or modified, the protection mechanism will lose effectiveness. This paper proposes {TZ}-{IMA}, a security-enhanced solution to verify the integrity of applications based on {ARM} {TrustZone} technology. The system saves the encrypted reference hash value of applications and the encryption key in the normal world and in {TrustZone}, respectively. Before an application is executed, the integrity of application is checked by the secure world. Moreover, a {vPCR} module is constructed in {TrustZone} to protect the security of the measurement list. Based on the trusted anchor provided by {TrustZone}, {TZ}-{IMA} enables a challenger to prove that the attesting platform has sufficient integrity to be used. {TZ}-{IMA} is implemented on {ARMv}8 development board, and the evaluation results demonstrate that the overhead is only approximately 5\% compared with the original system.},
	pages = {342--358},
	booktitle = {Information and Communications Security: 24th International Conference, {ICICS} 2022, Canterbury, {UK}, September 5–8, 2022, Proceedings},
	publisher = {Springer-Verlag},
	author = {Song, Liantao and Ding, Yan and Dong, Pan and Guo, Yong and Wang, Chuang},
	urldate = {2024-02-22},
	date = {2022-09-05},
	keywords = {{ARM} {TrustZone}, Integrity measurement architecture, Local appraisal, Remote attestation, Trusted computing},
}

@online{haidong_xia_runtime_integrity_measurement_2024,
	title = {Runtime Integrity Measurement and Attestation in a Trust Domain},
	url = {https://www.intel.com/content/www/us/en/developer/articles/community/runtime-integrity-measure-and-attest-trust-domain.html},
	abstract = {Extend the trust supply chain from hardware to software during runtime.},
	titleaddon = {Intel},
	author = {{Haidong Xia} and {Ken Lu} and {Ruoyu Ying} and {Xiaocheng Dong} and {Yanhui Zhao}},
	urldate = {2024-02-22},
	date = {2024-02-15},
	langid = {english},
	file = {Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\64X44FTT\\runtime-integrity-measure-and-attest-trust-domain.html:text/html},
}

@misc{intel_corporation_migration_spec_2023,
	title = {Intel {TDX} {TD} Migration Specification},
	url = {https://cdrdv2-public.intel.com/733578/intel-tdx-module-1.5-td-migration-spec-348550002.pdf},
	author = {{Intel Corporation}},
	date = {2023-12-13},
	file = {intel-tdx-module-1.5-td-migration-spec-348550002.pdf:C\:\\Users\\jakn\\Zotero\\storage\\WKK9QNF6\\intel-tdx-module-1.5-td-migration-spec-348550002.pdf:application/pdf},
}

@misc{intel_corporation_td_migration_design_2023,
	title = {{TDX} Migration {TD} Design Guide Version 0.8.9},
	url = {https://cdrdv2-public.intel.com/733580/TDX%20Migration%20TD%20Design%20Guide%20Rev%200.8.9.pdf},
	author = {{Intel Corporation}},
	date = {2023-03},
	file = {TDX Migration TD Design Guide Rev 0.8.9.pdf:C\:\\Users\\jakn\\Zotero\\storage\\G7R4WMES\\TDX Migration TD Design Guide Rev 0.8.9.pdf:application/pdf},
}


@online{uefi_forum_inc_acpi_docu_2022,
	title = {{ACPI} Specification 6.5 documentation},
	url = {https://uefi.org/specs/ACPI/6.5/05_ACPI_Software_Programming_Model.html},
	author = {{UEFI Forum, Inc.}},
	urldate = {2024-02-23},
	date = {2022-08-29},
	file = {5. ACPI Software Programming Model — ACPI Specification 6.5 documentation:C\:\\Users\\jakn\\Zotero\\storage\\NFMH2RVS\\05_ACPI_Software_Programming_Model.html:text/html},
}

@online{chasecrum_github_create_2024,
	title = {Create an Azure confidential {VM} in the Azure portal},
	url = {https://learn.microsoft.com/en-us/azure/confidential-computing/quick-create-confidential-vm-portal},
	abstract = {Learn how to quickly create a confidential virtual machine (confidential {VM}) in the Azure portal using Azure Marketplace images.},
	author = {{ChaseCrum (Github)} and {RunCai (Github)} and {simranparkhe (Github)}},
	urldate = {2024-02-23},
	date = {2024-01-04},
	langid = {english},
	file = {Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\G4NQ5LSH\\quick-create-confidential-vm-portal.html:text/html},
}


@online{microsoft_corporation_azure-samplesmicrosoft-azure-attestation_nodate,
	title = {Azure-Samples/microsoft-azure-attestation at e7f296ee2ca1dd93b75acdc6bab0cc9a6a20c17c},
	url = {https://github.com/Azure-Samples/microsoft-azure-attestation/tree/e7f296ee2ca1dd93b75acdc6bab0cc9a6a20c17c},
	author = {{Microsoft Corporation}},
	urldate = {2024-02-23},
	file = {Azure-Samples/microsoft-azure-attestation at e7f296ee2ca1dd93b75acdc6bab0cc9a6a20c17c:C\:\\Users\\jakn\\Zotero\\storage\\JKYY9RIX\\e7f296ee2ca1dd93b75acdc6bab0cc9a6a20c17c.html:text/html},
}

@online{noauthor_intel_2024,
	title = {Intel® Trust Domain Extension Linux Guest Kernel Security Specification — Intel® Trust Domain Extension},
	url = {https://intel.github.io/ccc-linux-guest-hardening-docs/security-spec.html#threat-model},
        author= {Intel Corporation},
	urldate = {2024-02-23},
	date = {2024-02-07},
	file = {Intel® Trust Domain Extension Linux Guest Kernel Security Specification — Intel® Trust Domain Extension:C\:\\Users\\jakn\\Zotero\\storage\\SQMSV3Y5\\security-spec.html:text/html},
}

@misc{intel_corporation_intel_TXT_nodate,
	title = {Intel® Trusted Execution Technology Hardware-based Technology for Enhancing Server Platform Security},
	url = {https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/trusted-execution-technology-security-paper.pdf},
	author = {{Intel Corporation}},
	langid = {english},
	file = {Intel® Trusted Execution Technology Hardware-based.pdf:C\:\\Users\\jakn\\Zotero\\storage\\IXDRCLFV\\Intel® Trusted Execution Technology Hardware-based.pdf:application/pdf},
}

@misc{intel_corporation_intel_seam_2023,
	title = {Intel® Trust Domain Extensions - {SEAM} Loader ({SEAMLDR}) Interface Specification},
	url = {https://cdrdv2.intel.com/v1/dl/getContent/739045},
	author = {{Intel Corporation}},
	date = {2023-09-07},
	langid = {english},
	file = {Intel® Trust Domain Extensions - SEAM Loader (SEAM.pdf:C\:\\Users\\jakn\\Zotero\\storage\\LNF77MH6\\Intel® Trust Domain Extensions - SEAM Loader (SEAM.pdf:application/pdf},
}


@software{intel_corporation_inteltdx-tools_2024,
	title = {intel/tdx-tools},
	rights = {Apache-2.0},
	url = {https://github.com/intel/tdx-tools},
	abstract = {Cloud Stack and Solutions for Intel {TDX} (Trust Domain Extension)},
	publisher = {Intel Corporation},
	author = {{Intel Corporation}},
	urldate = {2024-02-28},
	date = {2024-02-18},
	note = {original-date: 2021-12-02T22:27:06Z},
	keywords = {build, confidential-computing, kvm, qemu, tdx, uefi, virtualization},
}


@book{wright_spycatcher,
    author = {Peter Wright, Paul Greengrass},
    title = {Spycatcher : the Candid Autobiography of a Senior Intelligence Officer},
    publisher = {Heinemann},
    year = {1987}
}

@online{confidential_computing_consortium_ccc--technical-analysis--confidential-computing-v13_unlockedpdf_2023,
	title = {{CCC}-A Technical Analysis of Confidential Computing},
	url = {https://confidentialcomputing.io/wp-content/uploads/sites/10/2023/03/CCC-A-Technical-Analysis-of-Confidential-Computing-v1.3_unlocked.pdf},
	author = {{Confidential Computing Consortium}},
	urldate = {2024-02-23},
	date = {2023-03-15},
	file = {CCC-A-Technical-Analysis-of-Confidential-Computing-v1.3_unlocked.pdf:C\:\\Users\\jakn\\Zotero\\storage\\69ZGZYUS\\CCC-A-Technical-Analysis-of-Confidential-Computing-v1.3_unlocked.pdf:application/pdf},
}


@online{microsoft_corporation_azureconfidential-computing-cvm-guest-attestation_nodate,
	title = {Azure/confidential-computing-cvm-guest-attestation at tdx-preview},
	url = {https://github.com/Azure/confidential-computing-cvm-guest-attestation},
	abstract = {Confidential {VM} Platform Guest attestation sample apps - Azure/confidential-computing-cvm-guest-attestation at tdx-preview},
	titleaddon = {{GitHub}},
	author = {{Microsoft Corporation}},
	urldate = {2024-02-23},
	langid = {english},
	file = {Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\UMDX2SYY\\tdx-preview.html:text/html},
}

@online{uefi_forum_inc_uefi_spec_2022,
	title = {{UEFI} Specification 2.10 documentation},
	url = {https://uefi.org/specs/UEFI/2.10/38_Confidential_Computing.html#efi-cc-measurement-protocol},
	author = {{UEFI Forum, Inc.}},
	urldate = {2024-02-23},
	date = {2022-08-29},
	file = {38. Confidential Computing — UEFI Specification 2.10 documentation:C\:\\Users\\jakn\\Zotero\\storage\\5QXZC5P3\\38_Confidential_Computing.html:text/html},
}

@online{linux_kernel_development_community_tdx_2024,
	title = {{TDX} Guest {API} Documentation — The Linux Kernel documentation},
	url = {https://docs.kernel.org/virt/coco/tdx-guest.html},
	author = {{Linux Kernel development community}},
	urldate = {2024-02-23},
	date = {2024-02-18},
	file = {TDX Guest API Documentation — The Linux Kernel documentation:C\:\\Users\\jakn\\Zotero\\storage\\AKAP9HJI\\tdx-guest.html:text/html},
}

@online{dan_mabee_azure_attestation_2023,
	title = {Azure Attestation},
	url = {https://learn.microsoft.com/en-us/azure/confidential-computing/attestation-solutions},
	abstract = {Learn what attestation is and how to use it at Microsoft},
	author = {{Dan Mabee} and {jl-pm (Github)}},
	urldate = {2024-02-23},
	date = {2023-05-09},
	langid = {english},
	file = {Snapshot:C\:\\Users\\jakn\\Zotero\\storage\\3EX5MWPM\\attestation-solutions.html:text/html},
}


@misc{intel_corporation_guest_hypervisor,
	title = {{TDX} Guest-Hypervisor Communication Interface for TDX},
	url = {https://cdrdv2.intel.com/v1/dl/getContent/726790},
	author = {{Intel Corporation}},
	date = {2023-08-08},
	file = {TDX Guest-Hypervisor Communication Interface_1.0_344426_006 - 20230311.pdf:C\:\\Users\\jakn\\Zotero\\storage\\JQY2EJ3L\\TDX Guest-Hypervisor Communication Interface_1.0_344426_006 - 20230311.pdf:application/pdf},
}

@misc{intel_corporation_tdx-virtual-firmware-design-guide-rev-004-20231206pdf_2023,
	title = {tdx virtual firmware design guide},
	url = {https://www.intel.de/content/www/de/de/content-details/733585/intel-tdx-virtual-firmware-design-guide.html},
	author = {{Intel Corporation}},
	date = {2023-12},
	file = {tdx-virtual-firmware-design-guide-rev-004-20231206.pdf:C\:\\Users\\jakn\\Zotero\\storage\\2MXIQPMB\\tdx-virtual-firmware-design-guide-rev-004-20231206.pdf:application/pdf},
}


@inproceedings{usman_remote_2023,
	location = {New York, {NY}, {USA}},
	title = {Remote Attestation Assurance Arguments for Trusted Execution Environments},
	isbn = {9798400701009},
	url = {https://doi.org/10.1145/3579988.3585056},
	doi = {10.1145/3579988.3585056},
	series = {{SaT}-{CPS} '23},
	abstract = {Remote attestation ({RA}) is emerging as an important security mechanism for cyber-physical systems with strict security requirements. Trusted computing at large and Trusted Execution Environments ({TEEs}) in particular have been identified as key technologies to enable {RA} since they ideally allow retaining some element of control over remote devices despite them being compromised at the {OS} level. Unfortunately, sometimes it is claimed that {TEEs} provide {RA} support without really substantiating how this support is provided. In this paper we build the assurance arguments for {RA} to carefully map how secure {RA} depends on underlying security properties and how these in turn can be provided by {TEE} capabilities. We base our security analysis of {RA} on existing literature on security requirements for {RA} and use Goal Structuring Notation ({GSN}) as the method to build the security arguments. Our analysis identifies the set of {TEE} properties (as described in the {GlobalPlatform} standard) that are needed to support {RA}, and which goals that cannot be mapped to {TEE} implementations, and therefore require other forms of evidence for {RA} to be trusted at the top level.},
	pages = {33--42},
	booktitle = {Proceedings of the 2023 {ACM} Workshop on Secure and Trustworthy Cyber-Physical Systems},
	publisher = {Association for Computing Machinery},
	author = {Usman, Ahmad B. and Cole, Nigel and Asplund, Mikael and Boeira, Felipe and Vestlund, Christian},
	date = {2023},
	note = {event-place: Charlotte, {NC}, {USA}},
	keywords = {assurance, cps, globalplatform, goal structuring notation, remote attestation, trusted execution environments},
}

@inproceedings{wagner_establishing_2020,
	location = {Cham},
	title = {Establishing Secure Communication Channels Using Remote Attestation with {TPM} 2.0},
	isbn = {978-3-030-59817-4},
	doi = {10.1007/978-3-030-59817-4_5},
	series = {Lecture Notes in Computer Science},
	abstract = {Remote attestation allows a verifier to remotely check the integrity of a trusted computing platform. In recent years a number of attestation protocols based on Trusted Platform Modules ({TPMs}) have been proposed. These protocols cryptographically verify a trusted platform’s state by exchanging {TPM}-signed quotes. Some of them also establish an encrypted channel to the trusted platform, which allows the verifier to transmit information that only the attested software stack can read. However, many existing attestation protocols are either vulnerable against man-in-the-middle attacks, or depend on outdated {TPM} specifications. In this work we analyze a recently developed attestation protocol that is being actively used to interconnect highly distributed trusted applications. We find this protocol to be vulnerable against a variant of the classical relay attack. In response to this threat we develop a lightweight remote attestation protocol based on the {TPM} 2.0 specification that is not vulnerable to this attack. Unlike previous proposals, our protocol relies solely on the {TPM} to establish a shared key on the attested channel, which significantly reduces its attack surface. Our protocol supports mutual attestation, perfect forward secrecy and is independent of the underlying network stack. We provide a reference implementation of our protocol and compare its performance to previous proposals. We also analyze its security properties using the Tamarin theorem prover.},
	pages = {73--89},
	booktitle = {Security and Trust Management},
	publisher = {Springer International Publishing},
	author = {Wagner, Paul Georg and Birnstill, Pascal and Beyerer, Jürgen},
	editor = {Markantonakis, Kostantinos and Petrocchi, Marinella},
	date = {2020},
	langid = {english},
	keywords = {Attestation protocols, Key establishment, Remote attestation, Secure channels, Trusted computing, Trusted Platform Modules},
	file = {Wagner et al_2020_Establishing Secure Communication Channels Using Remote Attestation with TPM 2.pdf:C\:\\Users\\jakn\\Zotero\\storage\\IYZAT8PR\\Wagner et al_2020_Establishing Secure Communication Channels Using Remote Attestation with TPM 2.pdf:application/pdf},
}
